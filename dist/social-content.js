(()=>{function e(e,t){let n;return function(...o){clearTimeout(n),n=setTimeout((()=>{clearTimeout(n),e(...o)}),t)}}let t,n,o=!1,r=!1,a=null;function i(){document.querySelectorAll(".image-overlay").forEach((e=>e.remove()))}async function s(){try{const e=await new Promise(((e,t)=>{chrome.storage.sync.get(["enableOverlay","facebook","twitter","instagram","linkedin","reddit"],(n=>{chrome.runtime.lastError?t(chrome.runtime.lastError):e(n)}))}));return o=!1!==e.enableOverlay,r=!1!==e[a],o&&r}catch(e){return console.error("Error in shouldProcessImage:",e),!1}}async function c(){if(!await s())return void i();const e=[];(function t(n){n.nodeType===Node.ELEMENT_NODE&&("img"!==n.tagName.toLowerCase()||n.dataset.overlayProcessed||e.push(n),n.shadowRoot&&t(n.shadowRoot),n.childNodes.forEach((e=>t(e))))})(document.body),"instagram"===a&&document.querySelectorAll('img[srcset], img[src*="instagram"]').forEach((t=>{t.dataset.overlayProcessed||e.push(t)})),"reddit"===a&&document.querySelectorAll('img[alt="Post image"]').forEach((t=>e.push(t))),e.forEach(((e,t)=>{if(e.width>50&&e.height>50||e.getAttribute("width")>50&&e.getAttribute("height")>50||e.classList.contains("media-lightbox-img"))try{e.complete&&e.naturalWidth>0?l(e,t):e.addEventListener("load",(()=>{l(e,t)}),{once:!0})}catch(e){console.error("Error processing image:",e)}else e.dataset.overlayProcessed="skipped"}))}function l(e,t){if("true"===e.dataset.overlayProcessed)return;const n=new IntersectionObserver((o=>{o.forEach((o=>{o.isIntersecting&&((e.width>100&&e.height>100||"video"===e.tagName.toLowerCase())&&d(e,t),n.unobserve(e))}))}),{threshold:.1});n.observe(e),e.dataset.overlayProcessed="true",e.onerror=function(){},e.onload=function(){(e.width>100&&e.height>100||"video"===e.tagName.toLowerCase())&&d(e,t)}}function d(t,n){const o=`overlay-${n}-${Date.now()}`;let r=document.querySelector(`.image-overlay[data-for-image="${t.src}"]`);r||(r=document.createElement("div"),r.className="image-overlay",r.dataset.forImage=t.src,r.dataset.overlayId=o,r.style.cssText="\n            position: absolute;\n            width: 30px;\n            height: 30px;\n            background-color: rgba(255, 255, 255, 0.4);\n            border-radius: 50%;\n            cursor: pointer;\n            z-index: 2147483647;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 20px;\n            pointer-events: auto;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n            opacity: 0.5;\n            transition: opacity 0.3s ease, background-color 0.3s ease, display 0.3s ease;\n        ",r.textContent="ðŸ§¿",r.onclick=n=>{n.stopPropagation(),n.preventDefault();let i=document.querySelector(`.consent-popup[data-for-image="${t.src}"]`);if(i||(i=document.querySelector(`.consent-popup[data-overlay-id="${o}"]`)),i)return void i.remove();const s=function(e){if("instagram"===a){const t=document.createElement("canvas");t.width=e.naturalWidth,t.height=e.naturalHeight,t.getContext("2d").drawImage(e,0,0);try{return t.toDataURL("image/jpeg")}catch(t){return console.error("Failed to get image data:",t),e.src}}const t=e.src;let n=t;if("linkedin"===a){if(null!==e.closest(".feed-shared-celebration-image"))return t;try{const e=new URL(t),o=e.pathname;e.searchParams.delete("w"),e.searchParams.delete("h"),e.searchParams.set("w","1000"),e.searchParams.set("h","1000"),n=e.toString();const r=o.split(".").pop().toLowerCase();["jpg","jpeg","png","gif","webp"].includes(r)&&(n.toLowerCase().endsWith(`.${r}`)||(n+=`.${r}`))}catch(e){console.error("Failed to parse LinkedIn image URL:",e),n=t}}else if("instagram"===a&&t.includes("&_nc_ht="))try{const e=new URL(t);e.searchParams.delete("_nc_sid"),e.searchParams.delete("_nc_ohc"),e.searchParams.delete("_nc_ht"),e.searchParams.delete("edm"),e.searchParams.delete("oh"),e.searchParams.delete("oe"),n=e.toString()}catch(e){console.error("Failed to parse Instagram image URL:",e)}return n}(t);s?function(t,n,o){let r=document.querySelector(`.consent-popup[data-for-image="${n}"]`);if(r||(r=document.querySelector(`.consent-popup[data-overlay-id="${o}"]`)),r)return r;document.querySelectorAll(".consent-popup").forEach((e=>e.remove()));const a=document.createElement("div");a.className="consent-popup",a.setAttribute("data-for-image",n),a.setAttribute("data-overlay-id",o),a.innerHTML='\n        <p class="consent-message">Analyze this image?</p>\n        <div class="consent-buttons">\n            <button class="confirm-btn">Analyze Now</button>\n            <button class="cancel-btn">Skip</button>\n        </div>\n        <div class="consent-options">\n            <label class="store-data-option">\n                <input type="checkbox" class="store-data-checkbox" id="storeImageData" checked>\n                <span>Help us improve detection by storing this image</span>\n            </label>\n        </div>\n    ',document.body.appendChild(a);const i=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting?(a.style.display="flex",s()):a.style.display="none"}))}),{threshold:.1});i.observe(t);const s=()=>{if("none"===a.style.display)return;const e=t.getBoundingClientRect();let n=e.right+window.pageXOffset+10,o=e.top+window.pageYOffset;n+a.offsetWidth>window.innerWidth-10+window.pageXOffset&&(n=e.left+window.pageXOffset-a.offsetWidth-10);const r=window.innerHeight+window.pageYOffset-a.offsetHeight-10;o=Math.max(10+window.pageYOffset,Math.min(o,r)),a.style.position="absolute",a.style.left=`${n}px`,a.style.top=`${o}px`};setTimeout(s,0);const c=e(s,100);window.addEventListener("resize",c),window.addEventListener("scroll",c),a.querySelector(".confirm-btn")?.addEventListener("click",(async e=>{e.preventDefault();const t=a.querySelector("#storeImageData"),o=!!t&&t.checked;a.innerHTML='<div class="loading-indicator">Analyzing...</div>',await function(e,t,n){let o=e.split("/").pop().split("?")[0],r="image/jpeg";if(e.includes("twimg.com")){const t=new URL(e).searchParams.get("format");t&&(o+=`.${t}`,r=`image/${t}`)}else r=function(e){return{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",gif:"image/gif",webp:"image/webp"}[e.split(".").pop().toLowerCase()]||"application/octet-stream"}(o);fetch(e).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.arrayBuffer()})).then((e=>{const t=new Uint8Array(e);return crypto.subtle.digest("SHA-256",t).then((e=>{const n=Array.from(new Uint8Array(e)).map((e=>e.toString(16).padStart(2,"0"))).join("");return{uint8Array:t,hashHex:n}}))})).then((({uint8Array:a,hashHex:i})=>{chrome.runtime.sendMessage({action:"sendImage",imageData:{url:e,mimeType:r,filename:o,size:a.length,sha256Hash:i,origin:window.location.origin,storeData:n}},(e=>{chrome.runtime.lastError?u(t,"Error: "+chrome.runtime.lastError.message,"error"):"Authentication required"===e.error?u(t,"Authentication required. Please log in and try again.","error"):u(t,e,"success")}))})).catch((e=>{console.error("Error:",e),u(t,"Error: "+e.message,"error")}))}(n,a,o)})),a.querySelector(".cancel-btn")?.addEventListener("click",(()=>{window.removeEventListener("resize",c),window.removeEventListener("scroll",c),i.disconnect(),a.remove()}))}(r,s,o):function(){const e=document.createElement("div");e.textContent="No suitable image found.",e.style.position="fixed",e.style.bottom="20px",e.style.right="20px",e.style.padding="10px 20px",e.style.borderRadius="5px",e.style.color="#fff",e.style.zIndex="10000",e.style.boxShadow="0 2px 8px rgba(0, 0, 0, 0.2)",e.style.opacity="0",e.style.transition="opacity 0.5s ease-in-out",e.style.backgroundColor="#f44336",document.body.appendChild(e),e.offsetWidth,e.style.opacity="1",setTimeout((()=>{e.style.opacity="0",e.addEventListener("transitionend",(()=>{e.remove()}))}),3e3)}()},t.parentElement.appendChild(r),r.addEventListener("mouseenter",(()=>{r.style.opacity="1",r.style.backgroundColor="rgba(255, 255, 255, 0.8)"})),r.addEventListener("mouseleave",(()=>{r.style.opacity="0.5",r.style.backgroundColor="rgba(255, 255, 255, 0.4)"})));const i=e((()=>{const e=t.getBoundingClientRect(),n=window.innerHeight,o=window.innerWidth,a=e.top<n&&e.bottom>0&&e.left<o&&e.right>0,i=null!==t.closest(".media-lightbox-img"),s="video"===t.tagName.toLowerCase()||t.querySelector("video");if(!a||!(e.width>100&&e.height>100||s)||i&&null===t.offsetParent)s?(r.style.display="flex",r.style.top="10px",r.style.right="10px",r.style.bottom="auto",r.style.left="auto"):setTimeout((()=>{a||(r.style.display="none")}),300);else{r.style.display="flex";const e=10,t=10;r.style.top=`${e}px`,r.style.right=`${t}px`,r.style.bottom="auto",r.style.left="auto"}}),100);if(i(),!t.dataset.overlayEventListenersAdded){const e=()=>{i()},n=()=>{i()};window.addEventListener("scroll",e,{passive:!0}),window.addEventListener("resize",n,{passive:!0}),t.dataset.overlayEventListenersAdded="true"}new MutationObserver((e=>{e.forEach((e=>{"attributes"!==e.type||"src"!==e.attributeName&&"style"!==e.attributeName||(r.dataset.forImage=t.src,i())}))})).observe(t,{attributes:!0,attributeFilter:["src","style"]})}function u(e,t,n){const o=e.getAttribute("data-overlay-id");if(e.innerHTML="","error"===n)e.innerHTML=`\n            <div class="error-container">\n                <p class="error">${t}</p>\n                <button class="close-btn">Close</button>\n            </div>\n        `;else{const n=t.sageMakerAnalysis;if(n){const t=(100*n.probability).toFixed(1);let o,r;n.isFake,t<33?(o="#28a745",r="This content is likely real."):t<66?(o="#ffc107",r="This content is uncertainâ€”proceed with caution."):(o="#dc3545",r="This content is likely a deepfake."),e.innerHTML=`\n                <div class="analysis-title" style="\n                    color: ${o};\n                    font-weight: bold;\n                    text-align: center;\n                    margin-bottom: 20px;\n                    font-size: 16px;\n                ">${r}</div>\n\n                <div class="probability-circle">\n                    <svg width="150" height="150" viewBox="0 0 150 150">\n                        <circle\n                            cx="75"\n                            cy="75"\n                            r="70"\n                            stroke="#E6E6E6"\n                            stroke-width="10"\n                            fill="none"\n                        />\n                        <circle\n                            cx="75"\n                            cy="75"\n                            r="70"\n                            stroke="${o}"\n                            stroke-width="10"\n                            fill="none"\n                            stroke-linecap="round"\n                            stroke-dasharray="439.82"\n                            stroke-dashoffset="${439.82*(1-t/100)}"\n                            transform="rotate(-90 75 75)"\n                            style="transition: stroke-dashoffset 1s"\n                        />\n                    </svg>\n                    <div class="probability-text">\n                        <div class="probability-value" style="color: ${o}">${t}%</div>\n                        <div class="probability-label">Deepfake Probability</div>\n                    </div>\n                </div>\n\n                <div class="confidence-indicators">\n                    <div class="indicator real">\n                        <div class="indicator-dot"></div>\n                        <div class="indicator-label">Likely Real</div>\n                    </div>\n                    <div class="indicator uncertain">\n                        <div class="indicator-dot"></div>\n                        <div class="indicator-label">Uncertain</div>\n                    </div>\n                    <div class="indicator fake">\n                        <div class="indicator-dot"></div>\n                        <div class="indicator-label">Likely Deepfake</div>\n                    </div>\n                </div>\n\n                <div style="\n                    width: 100%;\n                    text-align: center; \n                    margin-top: 20px;\n                ">\n                    <button class="close-btn">Close</button>\n                </div>\n            `}else e.innerHTML='\n                <div class="error-container">\n                    <p class="error">No analysis results available</p>\n                    <button class="close-btn">Close</button>\n                </div>\n            '}e.setAttribute("data-overlay-id",o);const r=e.querySelector(".close-btn");r&&r.addEventListener("click",(()=>{e.remove()}))}const m=e(c,500);function p(e){for(const t of e)if(("childList"===t.type||"attributes"===t.type)&&(t.addedNodes.length>0||"attributes"===t.type&&"src"===t.attributeName)){clearTimeout(f),f=setTimeout((()=>{c()}),v);break}}function y(){document.querySelectorAll("img:not([data-overlay-processed])").forEach(((e,t)=>l(e,t)))}async function g(){if(!chrome.runtime||!chrome.runtime.id)return;const d=window.location.hostname;a=d.includes("linkedin.com")?"linkedin":d.includes("facebook.com")?"facebook":d.includes("twitter.com")||d.includes("x.com")?"twitter":d.includes("instagram.com")?"instagram":d.includes("reddit.com")?"reddit":null,a&&(await s()?(o=!0,r=!0,async function(){await s()&&c()}(),t=new MutationObserver((e=>{e.forEach((e=>{"childList"===e.type&&e.addedNodes.forEach((e=>{e.nodeType===Node.ELEMENT_NODE&&e.querySelectorAll("img:not([data-overlay-processed])").forEach(((e,t)=>l(e,t)))}))}))})),t.observe(document.body,{childList:!0,subtree:!0}),setInterval(y,2e3),window.addEventListener("scroll",e((()=>{c()}),200)),n=new MutationObserver(p),n.observe(document.body,{childList:!0,subtree:!0})):(o=!1,r=!1,i(),t&&t.disconnect(),n&&n.disconnect(),window.removeEventListener("scroll",m)))}setInterval((function(){chrome.runtime.id||location.reload()}),6e4),chrome.runtime.onMessage.addListener(((e,t,n)=>{return"settingsChanged"===e.action&&((s=e.changes).enableOverlay&&(o=s.enableOverlay.newValue),g(),n({success:!0})),"updateSettings"===e.action&&(i=e.settings,o=!1!==i.enableOverlay,r=!1!==i[a],o&&r?(document.querySelectorAll(".image-overlay").forEach((e=>{e.style.display="flex"})),c()):document.querySelectorAll(".image-overlay").forEach((e=>{e.style.display="none"})),n({status:"Settings updated"})),!0;var i,s})),g();const h=document.createElement("style");let f;h.innerHTML="\n    .overlay:state(secondary-text-color) {\n      color: var(--secondary-text-color);\n    }\n    \n    .image-fill:state(webkit-fill-available) {\n      width: -webkit-fill-available;\n    }\n  ",document.head.appendChild(h);const v=300;window.addEventListener("error",(e=>{e.error}))})();
//# sourceMappingURL=social-content.js.map