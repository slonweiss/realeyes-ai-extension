{"version":3,"file":"social-content.js","mappings":"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","sources":["webpack://chrome-gmail-poc/./src/social-content.js"],"sourcesContent":["(() => {\n  // At the top of the file, add:\n  // Utility function to debounce frequent function calls\n  function debounce(func, wait) {\n    let timeout;\n    return function executedFunction(...args) {\n      const later = () => {\n        clearTimeout(timeout);\n        func(...args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  // Add after the debounce function (around line 15)\n  function decodeJWT(token) {\n    try {\n      const base64Url = token.split(\".\")[1];\n      const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n      const jsonPayload = decodeURIComponent(\n        atob(base64)\n          .split(\"\")\n          .map((c) => {\n            return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n          })\n          .join(\"\")\n      );\n      const decoded = JSON.parse(jsonPayload);\n      console.log(\"Decoded JWT payload:\", decoded);\n      console.log(\"Extracted userId:\", decoded.username);\n      return decoded;\n    } catch (error) {\n      console.error(\"Error decoding JWT:\", error);\n      return null;\n    }\n  }\n\n  // Global variables\n  let extensionEnabled = false;\n  let siteEnabled = false;\n  let currentSite = null;\n\n  let retryCount = 0;\n  const MAX_RETRIES = 5;\n  const INITIAL_RETRY_DELAY = 1000; // 1 second\n\n  let bodyObserver;\n  let observer;\n\n  // Remove all overlay elements from the page\n  function removeAllOverlays() {\n    const overlays = document.querySelectorAll(\".image-overlay\");\n    overlays.forEach((overlay) => overlay.remove());\n  }\n\n  // Check if image processing should occur based on user settings\n  async function shouldProcessImage() {\n    try {\n      const items = await new Promise((resolve, reject) => {\n        chrome.storage.sync.get(\n          [\n            \"enableOverlay\",\n            \"facebook\",\n            \"twitter\",\n            \"instagram\",\n            \"linkedin\",\n            \"reddit\",\n          ],\n          (items) => {\n            if (chrome.runtime.lastError) {\n              reject(chrome.runtime.lastError);\n            } else {\n              resolve(items);\n            }\n          }\n        );\n      });\n\n      extensionEnabled = items.enableOverlay !== false;\n      siteEnabled = items[currentSite] !== false;\n\n      return extensionEnabled && siteEnabled;\n    } catch (error) {\n      console.error(\"Error in shouldProcessImage:\", error);\n      return false;\n    }\n  }\n\n  // Main function to add or update overlays on images\n  async function addOrUpdateOverlayToImages() {\n    const shouldProcess = await shouldProcessImage();\n    if (!shouldProcess) {\n      removeAllOverlays();\n      return;\n    }\n\n    const allImages = [];\n\n    // Recursive function to traverse DOM and shadow DOM\n    function traverse(node) {\n      if (node.nodeType !== Node.ELEMENT_NODE) return;\n      if (\n        node.tagName.toLowerCase() === \"img\" &&\n        !node.dataset.overlayProcessed\n      ) {\n        allImages.push(node);\n      }\n\n      if (node.shadowRoot) {\n        traverse(node.shadowRoot);\n      }\n\n      node.childNodes.forEach((child) => traverse(child));\n    }\n\n    traverse(document.body);\n\n    // Special handling for Instagram\n    if (currentSite === \"instagram\") {\n      const instagramImages = document.querySelectorAll(\n        'img[srcset], img[src*=\"instagram\"]'\n      );\n      instagramImages.forEach((img) => {\n        if (!img.dataset.overlayProcessed) {\n          allImages.push(img);\n        }\n      });\n    }\n\n    // Special handling for Reddit\n    if (currentSite === \"reddit\") {\n      const redditImages = document.querySelectorAll('img[alt=\"Post image\"]');\n      redditImages.forEach((img) => allImages.push(img));\n    }\n\n    // Process each image\n    allImages.forEach((img, index) => {\n      if (\n        (img.width > 50 && img.height > 50) ||\n        (img.getAttribute(\"width\") > 50 && img.getAttribute(\"height\") > 50) ||\n        img.classList.contains(\"media-lightbox-img\")\n      ) {\n        try {\n          if (img.complete && img.naturalWidth > 0) {\n            processImage(img, index);\n          } else {\n            img.addEventListener(\n              \"load\",\n              () => {\n                processImage(img, index);\n              },\n              { once: true }\n            );\n          }\n        } catch (error) {\n          console.error(\"Error processing image:\", error);\n        }\n      } else {\n        img.dataset.overlayProcessed = \"skipped\";\n      }\n    });\n  }\n\n  // Process individual image\n  function processImage(img, index) {\n    if (img.dataset.overlayProcessed === \"true\") {\n      return;\n    }\n\n    // Use Intersection Observer to detect when image is in viewport\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            if (\n              (img.width > 100 && img.height > 100) ||\n              img.tagName.toLowerCase() === \"video\"\n            ) {\n              addOrUpdateOverlayToImage(img, index);\n            }\n            observer.unobserve(img);\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    observer.observe(img);\n\n    img.dataset.overlayProcessed = \"true\";\n\n    // Error handling for image loading\n    img.onerror = function () {\n      // Error handling logic here if needed\n    };\n\n    // Handle successful image load\n    img.onload = function () {\n      if (\n        (img.width > 100 && img.height > 100) ||\n        img.tagName.toLowerCase() === \"video\"\n      ) {\n        addOrUpdateOverlayToImage(img, index);\n      }\n    };\n  }\n\n  // Add or update overlay on an image\n  function addOrUpdateOverlayToImage(img, index) {\n    // Create a unique identifier for this image/overlay pair\n    const uniqueId = `overlay-${index}-${Date.now()}`;\n\n    let overlay = document.querySelector(\n      `.image-overlay[data-for-image=\"${img.src}\"]`\n    );\n\n    if (!overlay) {\n      overlay = document.createElement(\"div\");\n      overlay.className = \"image-overlay\";\n      overlay.dataset.forImage = img.src;\n      overlay.dataset.overlayId = uniqueId;\n\n      // Create an img element for the icon\n      const iconImg = document.createElement(\"img\");\n      iconImg.src = chrome.runtime.getURL(\"icons/realeyes-ai-icon.png\");\n      iconImg.style.cssText = `\n        width: 20px;\n        height: 20px;\n        object-fit: contain;\n      `;\n\n      overlay.style.cssText = `\n            position: absolute;\n            width: 30px;\n            height: 30px;\n            background-color: rgba(255, 255, 255, 0.4);\n            border-radius: 50%;\n            cursor: pointer;\n            z-index: 2147483647;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 20px;\n            pointer-events: auto;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n            opacity: 0.5;\n            transition: opacity 0.3s ease, background-color 0.3s ease, display 0.3s ease;\n        `;\n\n      // Replace emoji with the image\n      overlay.appendChild(iconImg);\n\n      overlay.onclick = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        // First try to find popup by image src\n        let existingPopup = document.querySelector(\n          `.consent-popup[data-for-image=\"${img.src}\"]`\n        );\n\n        // If not found, try to find by overlay ID\n        if (!existingPopup) {\n          existingPopup = document.querySelector(\n            `.consent-popup[data-overlay-id=\"${uniqueId}\"]`\n          );\n        }\n\n        // If popup exists, remove it\n        if (existingPopup) {\n          existingPopup.remove();\n          return;\n        }\n\n        const highestQualityUrl = getHighestQualityImageUrl(img);\n\n        if (highestQualityUrl) {\n          showConsentPopup(overlay, highestQualityUrl, uniqueId);\n        } else {\n          showMessage(\"No suitable image found.\", \"error\");\n        }\n      };\n\n      img.parentElement.appendChild(overlay);\n\n      overlay.addEventListener(\"mouseenter\", () => {\n        overlay.style.opacity = \"1\";\n        overlay.style.backgroundColor = \"rgba(255, 255, 255, 0.8)\";\n      });\n\n      overlay.addEventListener(\"mouseleave\", () => {\n        overlay.style.opacity = \"0.5\";\n        overlay.style.backgroundColor = \"rgba(255, 255, 255, 0.4)\";\n      });\n    }\n\n    const updateOverlayPosition = debounce(() => {\n      const rect = img.getBoundingClientRect();\n      const viewportHeight = window.innerHeight;\n      const viewportWidth = window.innerWidth;\n\n      const isPartiallyVisible =\n        rect.top < viewportHeight &&\n        rect.bottom > 0 &&\n        rect.left < viewportWidth &&\n        rect.right > 0;\n\n      const isSlideshow = img.closest(\".media-lightbox-img\") !== null;\n      const isVideo =\n        img.tagName.toLowerCase() === \"video\" || img.querySelector(\"video\");\n\n      if (\n        isPartiallyVisible &&\n        ((rect.width > 100 && rect.height > 100) || isVideo) &&\n        (!isSlideshow || img.offsetParent !== null)\n      ) {\n        overlay.style.display = \"flex\";\n        const top = 10;\n        const right = 10;\n        overlay.style.top = `${top}px`;\n        overlay.style.right = `${right}px`;\n        overlay.style.bottom = \"auto\";\n        overlay.style.left = \"auto\";\n      } else if (isVideo) {\n        overlay.style.display = \"flex\";\n        overlay.style.top = \"10px\";\n        overlay.style.right = \"10px\";\n        overlay.style.bottom = \"auto\";\n        overlay.style.left = \"auto\";\n      } else {\n        setTimeout(() => {\n          if (!isPartiallyVisible) {\n            overlay.style.display = \"none\";\n          }\n        }, 300); // 300ms delay before hiding\n      }\n    }, 100); // 100ms debounce\n\n    updateOverlayPosition();\n\n    if (!img.dataset.overlayEventListenersAdded) {\n      const scrollHandler = () => {\n        updateOverlayPosition();\n      };\n      const resizeHandler = () => {\n        updateOverlayPosition();\n      };\n      window.addEventListener(\"scroll\", scrollHandler, { passive: true });\n      window.addEventListener(\"resize\", resizeHandler, { passive: true });\n      img.dataset.overlayEventListenersAdded = \"true\";\n    }\n\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (\n          mutation.type === \"attributes\" &&\n          (mutation.attributeName === \"src\" ||\n            mutation.attributeName === \"style\")\n        ) {\n          overlay.dataset.forImage = img.src;\n          updateOverlayPosition();\n        }\n      });\n    });\n\n    observer.observe(img, {\n      attributes: true,\n      attributeFilter: [\"src\", \"style\"],\n    });\n  }\n\n  // Show consent popup before sending image for analysis\n  function showConsentPopup(target, imageUrl, overlayId) {\n    // Check for existing popup using both image URL and overlay ID\n    let existingPopup = document.querySelector(\n      `.consent-popup[data-for-image=\"${imageUrl}\"]`\n    );\n\n    if (!existingPopup) {\n      existingPopup = document.querySelector(\n        `.consent-popup[data-overlay-id=\"${overlayId}\"]`\n      );\n    }\n\n    if (existingPopup) {\n      return existingPopup;\n    }\n\n    // Remove any other popups\n    const existingPopups = document.querySelectorAll(\".consent-popup\");\n    existingPopups.forEach((popup) => popup.remove());\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"consent-popup\";\n    popup.setAttribute(\"data-for-image\", imageUrl);\n    popup.setAttribute(\"data-overlay-id\", overlayId); // Add overlay ID to popup\n\n    // Add popup content\n    popup.innerHTML = `\n        <p class=\"consent-message\">Analyze this image?</p>\n        <div class=\"consent-buttons\">\n            <button class=\"confirm-btn\">Analyze Now</button>\n            <button class=\"cancel-btn\">Skip</button>\n        </div>\n        <div class=\"consent-options\">\n            <label class=\"store-data-option\">\n                <input type=\"checkbox\" class=\"store-data-checkbox\" id=\"storeImageData\" checked>\n                <span>Help us improve detection by storing this image</span>\n            </label>\n        </div>\n    `;\n\n    document.body.appendChild(popup);\n\n    // Create an Intersection Observer for the target (overlay icon)\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            // Show popup when target is visible\n            popup.style.display = \"flex\";\n            updatePopupPosition();\n          } else {\n            // Hide popup when target is not visible\n            popup.style.display = \"none\";\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    observer.observe(target);\n\n    // Position the popup relative to the icon overlay\n    const updatePopupPosition = () => {\n      if (popup.style.display === \"none\") return;\n\n      const overlayRect = target.getBoundingClientRect();\n\n      // Calculate position relative to the overlay icon\n      let left = overlayRect.right + window.pageXOffset + 10;\n      let top = overlayRect.top + window.pageYOffset;\n\n      // If popup would go off-screen to the right, position it to the left\n      if (\n        left + popup.offsetWidth >\n        window.innerWidth - 10 + window.pageXOffset\n      ) {\n        left = overlayRect.left + window.pageXOffset - popup.offsetWidth - 10;\n      }\n\n      // Ensure popup stays within viewport bounds vertically\n      const maxTop =\n        window.innerHeight + window.pageYOffset - popup.offsetHeight - 10;\n      top = Math.max(10 + window.pageYOffset, Math.min(top, maxTop));\n\n      popup.style.position = \"absolute\";\n      popup.style.left = `${left}px`;\n      popup.style.top = `${top}px`;\n    };\n\n    // Initial positioning\n    setTimeout(updatePopupPosition, 0);\n\n    // Update position on window resize and scroll\n    const debouncedUpdate = debounce(updatePopupPosition, 100);\n    window.addEventListener(\"resize\", debouncedUpdate);\n    window.addEventListener(\"scroll\", debouncedUpdate);\n\n    // Enhanced cleanup function\n    const cleanup = () => {\n      window.removeEventListener(\"resize\", debouncedUpdate);\n      window.removeEventListener(\"scroll\", debouncedUpdate);\n      observer.disconnect();\n      popup.remove();\n    };\n\n    // Update the confirm button click handler\n    popup\n      .querySelector(\".confirm-btn\")\n      ?.addEventListener(\"click\", async (e) => {\n        e.preventDefault();\n\n        const storeDataCheckbox = popup.querySelector(\"#storeImageData\");\n        const storeData = storeDataCheckbox ? storeDataCheckbox.checked : false;\n\n        // Remove ALL existing content from popup\n        popup.innerHTML = '<div class=\"loading-indicator\">Analyzing...</div>';\n\n        // Send image for analysis using the existing popup\n        await sendImageForAnalysis(imageUrl, popup, storeData);\n      });\n\n    // Only add cleanup to cancel button\n    popup.querySelector(\".cancel-btn\")?.addEventListener(\"click\", cleanup);\n\n    return popup;\n  }\n\n  // Send image data for analysis\n  function sendImageForAnalysis(url, popup, storeData) {\n    let filename = url.split(\"/\").pop().split(\"?\")[0];\n    let mimeType = \"image/jpeg\"; // Default to JPEG for Twitter images\n\n    if (url.includes(\"twimg.com\")) {\n      // For Twitter images, extract format from URL\n      const format = new URL(url).searchParams.get(\"format\");\n      if (format) {\n        filename += `.${format}`;\n        mimeType = `image/${format}`;\n      }\n    } else {\n      mimeType = getMimeType(filename);\n    }\n\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.arrayBuffer();\n      })\n      .then((arrayBuffer) => {\n        const uint8Array = new Uint8Array(arrayBuffer);\n        return crypto.subtle\n          .digest(\"SHA-256\", uint8Array)\n          .then((hashBuffer) => {\n            const hashArray = Array.from(new Uint8Array(hashBuffer));\n            const hashHex = hashArray\n              .map((b) => b.toString(16).padStart(2, \"0\"))\n              .join(\"\");\n            return { uint8Array, hashHex };\n          });\n      })\n      .then(({ uint8Array, hashHex }) => {\n        chrome.runtime.sendMessage(\n          {\n            action: \"sendImage\",\n            imageData: {\n              url,\n              mimeType,\n              filename,\n              size: uint8Array.length,\n              sha256Hash: hashHex,\n              origin: window.location.origin,\n              storeData: storeData, // Add the storage consent flag\n            },\n          },\n          (response) => {\n            if (chrome.runtime.lastError) {\n              displayAnalysisResults(\n                popup,\n                \"Error: \" + chrome.runtime.lastError.message,\n                \"error\"\n              );\n            } else if (response.error === \"Authentication required\") {\n              displayAnalysisResults(\n                popup,\n                \"Authentication required. Please log in and try again.\",\n                \"error\"\n              );\n            } else {\n              displayAnalysisResults(popup, response, \"success\");\n            }\n          }\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        displayAnalysisResults(popup, \"Error: \" + error.message, \"error\");\n      });\n  }\n\n  // Simplify displayAnalysisResults since UI cleanup is handled earlier\n  function displayAnalysisResults(popup, results, status) {\n    const overlayId = popup.getAttribute(\"data-overlay-id\");\n    popup.innerHTML = \"\";\n\n    if (status === \"error\") {\n      popup.innerHTML = `\n            <div class=\"error-container\">\n                <div class=\"close-x\">×</div>\n                <p class=\"error\">${results}</p>\n            </div>\n        `;\n    } else {\n      const analysis = results.sageMakerAnalysis;\n\n      if (analysis) {\n        const probability = (analysis.probability * 100).toFixed(1);\n        const isFake = analysis.isFake;\n\n        // Determine color and text based on probability\n        let confidenceColor;\n        let titleText;\n        if (probability < 33) {\n          confidenceColor = \"#28a745\";\n          titleText = \"This content is likely real.\";\n        } else if (probability < 66) {\n          confidenceColor = \"#ffc107\";\n          titleText = \"This content is uncertain—proceed with caution.\";\n        } else {\n          confidenceColor = \"#dc3545\";\n          titleText = \"This content is likely a deepfake.\";\n        }\n\n        popup.innerHTML = `\n                <div class=\"close-x\">×</div>\n                <div class=\"analysis-title\" style=\"\n                    color: ${confidenceColor};\n                    font-weight: bold;\n                    text-align: center;\n                    margin-bottom: 20px;\n                    font-size: 16px;\n                \">${titleText}</div>\n\n                <div class=\"probability-circle\">\n                    <svg width=\"150\" height=\"150\" viewBox=\"0 0 150 150\">\n                        <circle\n                            cx=\"75\"\n                            cy=\"75\"\n                            r=\"70\"\n                            stroke=\"#E6E6E6\"\n                            stroke-width=\"10\"\n                            fill=\"none\"\n                        />\n                        <circle\n                            cx=\"75\"\n                            cy=\"75\"\n                            r=\"70\"\n                            stroke=\"${confidenceColor}\"\n                            stroke-width=\"10\"\n                            fill=\"none\"\n                            stroke-linecap=\"round\"\n                            stroke-dasharray=\"439.82\"\n                            stroke-dashoffset=\"${\n                              439.82 * (1 - probability / 100)\n                            }\"\n                            transform=\"rotate(-90 75 75)\"\n                            style=\"transition: stroke-dashoffset 1s\"\n                        />\n                    </svg>\n                    <div class=\"probability-text\">\n                        <div class=\"probability-value\" style=\"color: ${confidenceColor}\">${probability}%</div>\n                        <div class=\"probability-label\">Deepfake Probability</div>\n                    </div>\n                </div>\n\n                <div class=\"confidence-indicators\">\n                    <div class=\"indicator real\">\n                        <div class=\"indicator-dot\"></div>\n                        <div class=\"indicator-label\">Likely Real</div>\n                    </div>\n                    <div class=\"indicator uncertain\">\n                        <div class=\"indicator-dot\"></div>\n                        <div class=\"indicator-label\">Uncertain</div>\n                    </div>\n                    <div class=\"indicator fake\">\n                        <div class=\"indicator-dot\"></div>\n                        <div class=\"indicator-label\">Likely Deepfake</div>\n                    </div>\n                </div>\n\n                <div class=\"feedback-section\" style=\"margin-top: 20px; text-align: center;\">\n                    <p style=\"margin-bottom: 10px;\">Was this analysis helpful?</p>\n                    <div class=\"feedback-buttons\">\n                        <button class=\"feedback-btn thumbs-up\" data-image-hash=\"${\n                          results.imageHash\n                        }\" data-value=\"up\">\n                            <span>👍</span>\n                        </button>\n                        <button class=\"feedback-btn thumbs-down\" data-image-hash=\"${\n                          results.imageHash\n                        }\" data-value=\"down\">\n                            <span>👎</span>\n                        </button>\n                    </div>\n                    <div class=\"feedback-comment\" style=\"display: none;\">\n                        <textarea placeholder=\"Tell us why (optional)\" maxlength=\"500\" style=\"\n                            width: calc(100% - 20px);\n                            max-width: 280px;\n                            margin: 10px auto;\n                            padding: 8px;\n                            border: 1px solid #ccc;\n                            border-radius: 4px;\n                            resize: vertical;\n                            min-height: 60px;\n                            max-height: 120px;\n                            font-family: inherit;\n                            font-size: 14px;\n                            color: #333;\n                            background-color: #fff;\n                            box-sizing: border-box;\n                        \"></textarea>\n                        <button class=\"submit-feedback-btn\" style=\"\n                            margin-top: 10px;\n                            padding: 8px 16px;\n                            background-color: #4CAF50;\n                            color: white;\n                            border: none;\n                            border-radius: 4px;\n                            cursor: pointer;\n                            font-size: 14px;\n                            font-family: inherit;\n                        \">Submit Feedback</button>\n                    </div>\n                </div>\n            `;\n\n        // Add CSS for the close-x\n        const style = document.createElement(\"style\");\n        style.textContent = `\n                .close-x {\n                    position: absolute;\n                    top: 5px;\n                    right: 10px;\n                    cursor: pointer;\n                    font-size: 20px;\n                    color: #666;\n                    transition: color 0.2s;\n                }\n                .close-x:hover {\n                    color: #333;\n                }\n            `;\n        document.head.appendChild(style);\n\n        // Add event listeners for feedback buttons\n        const feedbackBtns = popup.querySelectorAll(\".feedback-btn\");\n        const feedbackComment = popup.querySelector(\".feedback-comment\");\n        const submitBtn = popup.querySelector(\".submit-feedback-btn\");\n        const textarea = popup.querySelector(\"textarea\");\n\n        feedbackBtns.forEach((btn) => {\n          btn.addEventListener(\"click\", () => {\n            // Remove active class from all buttons\n            feedbackBtns.forEach((b) => b.classList.remove(\"active\"));\n            // Add active class to clicked button\n            btn.classList.add(\"active\");\n            // Show comment section\n            feedbackComment.style.display = \"block\";\n          });\n        });\n\n        submitBtn.addEventListener(\"click\", async () => {\n          // Disable the submit button and show loading state\n          submitBtn.disabled = true;\n          submitBtn.innerHTML = `\n            <span class=\"spinner\"></span>\n            Sending...\n          `;\n\n          // Get auth token from storage\n          const { authToken } = await chrome.storage.local.get([\"authToken\"]);\n          console.log(\n            \"Retrieved authToken:\",\n            authToken ? \"Token exists\" : \"No token found\"\n          );\n\n          if (!authToken) {\n            console.error(\"No auth token found\");\n            submitBtn.innerHTML = \"Error: Please log in\";\n            return;\n          }\n\n          // Decode JWT and get userId\n          const decodedToken = decodeJWT(authToken);\n          const userId = decodedToken?.username || null;\n          console.log(\"Final userId to be submitted:\", userId);\n\n          const feedbackBtns = popup.querySelectorAll(\".feedback-btn\");\n          const feedbackComment = popup.querySelector(\".feedback-comment\");\n          const imageHash = feedbackBtns[0].dataset.imageHash;\n          const selectedFeedback = Array.from(feedbackBtns)\n            .find((btn) => btn.classList.contains(\"active\"))\n            ?.getAttribute(\"data-value\");\n          const comment = feedbackComment?.value?.trim() || \"\";\n\n          if (!selectedFeedback) {\n            console.error(\"No feedback selected\");\n            return;\n          }\n\n          console.log(\"Submitting feedback with data:\", {\n            imageHash,\n            feedbackType: selectedFeedback,\n            comment,\n            userId,\n          });\n\n          try {\n            // Send message to background script\n            chrome.runtime.sendMessage(\n              {\n                action: \"submitFeedback\",\n                feedbackData: {\n                  imageHash,\n                  feedbackType: selectedFeedback,\n                  comment,\n                  userId,\n                },\n                origin: window.location.origin,\n              },\n              (response) => {\n                console.log(\"Feedback submission response:\", response);\n                if (response.success) {\n                  // Replace entire feedback section content with a more compact success message\n                  const feedbackSection =\n                    popup.querySelector(\".feedback-section\");\n                  feedbackSection.style.marginTop = \"0\"; // Remove extra margin\n                  feedbackSection.innerHTML = `\n                    <div class=\"feedback-success\">\n                      <div class=\"success-animation\">\n                        <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n                          <circle class=\"checkmark-circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\"/>\n                          <path class=\"checkmark-check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n                        </svg>\n                        <div class=\"success-ripple\"></div>\n                      </div>\n                      <h3 class=\"feedback-title\">Thank you!</h3>\n                      <p class=\"feedback-message\">Your feedback helps improve our analyses</p>\n                    </div>\n                  `;\n\n                  // Add transition for smooth height adjustment\n                  popup.style.transition = \"height 0.3s ease-out\";\n                  // Adjust popup height to fit new content\n                  setTimeout(() => {\n                    popup.style.height = \"auto\";\n                    const newHeight = popup.offsetHeight;\n                    popup.style.height = newHeight + \"px\";\n                  }, 0);\n                } else if (\n                  response.error &&\n                  response.error.includes(\"already submitted feedback\")\n                ) {\n                  // Handle case where user already submitted feedback\n                  const feedbackSection =\n                    popup.querySelector(\".feedback-section\");\n                  feedbackSection.style.marginTop = \"0\";\n                  feedbackSection.innerHTML = `\n                    <div class=\"feedback-already-submitted\">\n                      <div class=\"info-animation\">\n                        <svg class=\"info-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n                          <circle class=\"info-circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\"/>\n                          <path class=\"info-mark\" fill=\"none\" d=\"M26 15v2m0 7v13\"/>\n                        </svg>\n                      </div>\n                      <h3 class=\"feedback-title\" style=\"color: #3498db;\">Already Submitted</h3>\n                      <p class=\"feedback-message\">You've already provided feedback for this image</p>\n                    </div>\n                  `;\n                } else {\n                  // Existing error handling\n                  submitBtn.disabled = false;\n                  submitBtn.innerHTML = \"Submit Feedback\";\n\n                  const errorMsg = document.createElement(\"p\");\n                  errorMsg.className = \"feedback-error\";\n                  errorMsg.textContent = `Error: ${\n                    response.error || \"Failed to submit feedback\"\n                  }`;\n                  submitBtn.parentNode.insertBefore(\n                    errorMsg,\n                    submitBtn.nextSibling\n                  );\n                }\n              }\n            );\n          } catch (error) {\n            console.error(\"Error in feedback submission:\", error);\n            submitBtn.disabled = false;\n            submitBtn.innerHTML = \"Submit Feedback\";\n\n            const errorMsg = document.createElement(\"p\");\n            errorMsg.className = \"feedback-error\";\n            errorMsg.textContent = \"Error: Failed to submit feedback\";\n            submitBtn.parentNode.insertBefore(errorMsg, submitBtn.nextSibling);\n          }\n        });\n\n        console.log(\"Feedback buttons:\", {\n          feedbackBtns: popup.querySelectorAll(\".feedback-btn\"),\n          submitBtn: popup.querySelector(\".submit-feedback-btn\"),\n          feedbackComment: popup.querySelector(\".feedback-comment\"),\n        });\n      } else {\n        popup.innerHTML = `\n                <div class=\"error-container\">\n                    <div class=\"close-x\">×</div>\n                    <p class=\"error\">No analysis results available</p>\n                </div>\n            `;\n      }\n    }\n\n    // Ensure the overlay ID is maintained\n    popup.setAttribute(\"data-overlay-id\", overlayId);\n\n    // Add click handler for the close X\n    const closeX = popup.querySelector(\".close-x\");\n    if (closeX) {\n      closeX.addEventListener(\"click\", () => {\n        popup.remove();\n      });\n    }\n  }\n\n  // Helper function to get MIME type from filename\n  function getMimeType(filename) {\n    const ext = filename.split(\".\").pop().toLowerCase();\n    const mimeTypes = {\n      jpg: \"image/jpeg\",\n      jpeg: \"image/jpeg\",\n      png: \"image/png\",\n      gif: \"image/gif\",\n      webp: \"image/webp\",\n    };\n    return mimeTypes[ext] || \"application/octet-stream\";\n  }\n\n  // Get the highest quality image URL\n  function getHighestQualityImageUrl(img) {\n    if (currentSite === \"instagram\") {\n      // Try to get the image data from the loaded image\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = img.naturalWidth;\n      canvas.height = img.naturalHeight;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0);\n      try {\n        return canvas.toDataURL(\"image/jpeg\");\n      } catch (e) {\n        console.error(\"Failed to get image data:\", e);\n        // Fall back to the original src if we can't get the data URL\n        return img.src;\n      }\n    }\n\n    const originalSrc = img.src;\n    let highQualityUrl = originalSrc;\n\n    if (currentSite === \"linkedin\") {\n      const isCertificationImage =\n        img.closest(\".feed-shared-celebration-image\") !== null;\n\n      if (isCertificationImage) {\n        return originalSrc;\n      }\n\n      try {\n        const parsedUrl = new URL(originalSrc);\n        const pathname = parsedUrl.pathname;\n\n        // Remove size parameters\n        parsedUrl.searchParams.delete(\"w\");\n        parsedUrl.searchParams.delete(\"h\");\n\n        // Set to highest quality\n        parsedUrl.searchParams.set(\"w\", \"1000\");\n        parsedUrl.searchParams.set(\"h\", \"1000\");\n\n        highQualityUrl = parsedUrl.toString();\n\n        // Preserve the original file extension if it exists\n        const originalExtension = pathname.split(\".\").pop().toLowerCase();\n        if ([\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\"].includes(originalExtension)) {\n          if (!highQualityUrl.toLowerCase().endsWith(`.${originalExtension}`)) {\n            highQualityUrl += `.${originalExtension}`;\n          }\n        }\n      } catch (error) {\n        console.error(\"Failed to parse LinkedIn image URL:\", error);\n        highQualityUrl = originalSrc;\n      }\n    } else if (currentSite === \"instagram\") {\n      if (originalSrc.includes(\"&_nc_ht=\")) {\n        try {\n          const url = new URL(originalSrc);\n          url.searchParams.delete(\"_nc_sid\");\n          url.searchParams.delete(\"_nc_ohc\");\n          url.searchParams.delete(\"_nc_ht\");\n          url.searchParams.delete(\"edm\");\n          url.searchParams.delete(\"oh\");\n          url.searchParams.delete(\"oe\");\n          highQualityUrl = url.toString();\n        } catch (error) {\n          console.error(\"Failed to parse Instagram image URL:\", error);\n        }\n      }\n    }\n\n    return highQualityUrl;\n  }\n\n  // Show message to user\n  function showMessage(message, type) {\n    const messageDiv = document.createElement(\"div\");\n    messageDiv.textContent = message;\n    messageDiv.style.position = \"fixed\";\n    messageDiv.style.bottom = \"20px\";\n    messageDiv.style.right = \"20px\";\n    messageDiv.style.padding = \"10px 20px\";\n    messageDiv.style.borderRadius = \"5px\";\n    messageDiv.style.color = \"#fff\";\n    messageDiv.style.zIndex = \"10000\";\n    messageDiv.style.boxShadow = \"0 2px 8px rgba(0, 0, 0, 0.2)\";\n    messageDiv.style.opacity = \"0\";\n    messageDiv.style.transition = \"opacity 0.5s ease-in-out\";\n\n    if (type === \"success\") {\n      messageDiv.style.backgroundColor = \"#4caf50\";\n    } else if (type === \"error\") {\n      messageDiv.style.backgroundColor = \"#f44336\";\n    } else {\n      messageDiv.style.backgroundColor = \"#333\";\n    }\n\n    document.body.appendChild(messageDiv);\n\n    void messageDiv.offsetWidth;\n\n    messageDiv.style.opacity = \"1\";\n\n    setTimeout(() => {\n      messageDiv.style.opacity = \"0\";\n      messageDiv.addEventListener(\"transitionend\", () => {\n        messageDiv.remove();\n      });\n    }, 3000);\n  }\n\n  // Debounced version of addOrUpdateOverlayToImages\n  const debouncedAddOrUpdateOverlayToImages = debounce(\n    addOrUpdateOverlayToImages,\n    500\n  );\n\n  // Handle DOM changes\n  function handleDOMChanges(mutationsList) {\n    for (const mutation of mutationsList) {\n      if (mutation.type === \"childList\" || mutation.type === \"attributes\") {\n        if (\n          mutation.addedNodes.length > 0 ||\n          (mutation.type === \"attributes\" && mutation.attributeName === \"src\")\n        ) {\n          clearTimeout(debounceTimer);\n          debounceTimer = setTimeout(() => {\n            addOrUpdateOverlayToImages();\n          }, DEBOUNCE_DELAY);\n          break;\n        }\n      }\n    }\n  }\n\n  // Set up observers for DOM changes\n  function setupObservers() {\n    bodyObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"childList\") {\n          mutation.addedNodes.forEach((node) => {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n              const images = node.querySelectorAll(\n                \"img:not([data-overlay-processed])\"\n              );\n              images.forEach((img, index) => processImage(img, index));\n            }\n          });\n        }\n      });\n    });\n\n    bodyObserver.observe(document.body, { childList: true, subtree: true });\n\n    setInterval(checkForNewImages, 2000);\n\n    window.addEventListener(\n      \"scroll\",\n      debounce(() => {\n        addOrUpdateOverlayToImages();\n      }, 200)\n    );\n\n    observer = new MutationObserver(handleDOMChanges);\n    observer.observe(document.body, { childList: true, subtree: true });\n  }\n\n  // Disconnect observers\n  function disconnectObservers() {\n    if (bodyObserver) {\n      bodyObserver.disconnect();\n    }\n    if (observer) {\n      observer.disconnect();\n    }\n\n    window.removeEventListener(\"scroll\", debouncedAddOrUpdateOverlayToImages);\n  }\n\n  // Check for new images periodically\n  function checkForNewImages() {\n    const images = document.querySelectorAll(\n      \"img:not([data-overlay-processed])\"\n    );\n    images.forEach((img, index) => processImage(img, index));\n  }\n\n  // Watch for changes in certification images\n  function watchCertificationImage(container) {\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"childList\") {\n          const addedNodes = Array.from(mutation.addedNodes);\n          const removedNodes = Array.from(mutation.removedNodes);\n\n          const addedImage = addedNodes.find((node) => node.tagName === \"IMG\");\n          const removedImage = removedNodes.find(\n            (node) => node.tagName === \"IMG\"\n          );\n\n          if (addedImage) {\n            processImage(addedImage, \"certification\");\n          }\n\n          if (removedImage) {\n            const overlay = container.querySelector(\".image-overlay\");\n            if (overlay) {\n              overlay.remove();\n            }\n          }\n        }\n      });\n    });\n\n    observer.observe(container, { childList: true, subtree: true });\n  }\n\n  // Check if the extension is still valid\n  function checkExtensionValidity() {\n    if (!chrome.runtime.id) {\n      location.reload();\n    }\n  }\n\n  setInterval(checkExtensionValidity, 60000);\n\n  // Initialize overlay\n  async function initializeOverlay() {\n    const shouldProcess = await shouldProcessImage();\n    if (shouldProcess) {\n      addOrUpdateOverlayToImages();\n    }\n  }\n\n  // Set up the extension\n  async function setupExtension() {\n    if (!chrome.runtime || !chrome.runtime.id) {\n      return;\n    }\n\n    const hostname = window.location.hostname;\n    if (hostname.includes(\"linkedin.com\")) currentSite = \"linkedin\";\n    else if (hostname.includes(\"facebook.com\")) currentSite = \"facebook\";\n    else if (hostname.includes(\"twitter.com\") || hostname.includes(\"x.com\"))\n      currentSite = \"twitter\";\n    else if (hostname.includes(\"instagram.com\")) currentSite = \"instagram\";\n    else if (hostname.includes(\"reddit.com\")) currentSite = \"reddit\";\n    else currentSite = null;\n\n    if (currentSite) {\n      const shouldProcess = await shouldProcessImage();\n      if (shouldProcess) {\n        extensionEnabled = true;\n        siteEnabled = true;\n        initializeOverlay();\n        setupObservers();\n      } else {\n        disableExtension();\n      }\n    }\n  }\n\n  // Disable the extension\n  function disableExtension() {\n    extensionEnabled = false;\n    siteEnabled = false;\n    removeAllOverlays();\n    disconnectObservers();\n  }\n\n  // Handle settings updates\n  function handleSettingsUpdate(settings) {\n    extensionEnabled = settings.enableOverlay !== false;\n    siteEnabled = settings[currentSite] !== false;\n\n    if (!extensionEnabled || !siteEnabled) {\n      hideAllOverlays();\n    } else {\n      showAllOverlays();\n      addOrUpdateOverlayToImages();\n    }\n  }\n\n  // Hide all overlays\n  function hideAllOverlays() {\n    const overlays = document.querySelectorAll(\".image-overlay\");\n    overlays.forEach((overlay) => {\n      overlay.style.display = \"none\";\n    });\n  }\n\n  // Show all overlays\n  function showAllOverlays() {\n    const overlays = document.querySelectorAll(\".image-overlay\");\n    overlays.forEach((overlay) => {\n      overlay.style.display = \"flex\";\n    });\n  }\n\n  // Message listener for chrome runtime messages\n  chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    if (request.action === \"settingsChanged\") {\n      // Update your content script's behavior based on the new settings\n      // For example:\n      updateSettings(request.changes);\n      sendResponse({ success: true });\n    }\n    if (request.action === \"updateSettings\") {\n      handleSettingsUpdate(request.settings);\n      sendResponse({ status: \"Settings updated\" });\n    }\n    return true; // Indicates that the response is sent asynchronously\n  });\n\n  function updateSettings(changes) {\n    // Implement this function to update your content script's behavior\n    // based on the changed settings\n    // Example:\n    if (changes.enableOverlay) {\n      extensionEnabled = changes.enableOverlay.newValue;\n    }\n    // Update other settings as needed\n    setupExtension(); // Re-run your setup function with the new settings\n  }\n\n  // Initialize the extension\n  setupExtension();\n\n  // Add CSS rules\n  const cssRules = `\n    .overlay:state(secondary-text-color) {\n      color: var(--secondary-text-color);\n    }\n    \n    .image-fill:state(webkit-fill-available) {\n      width: -webkit-fill-available;\n    }\n\n    .feedback-btn {\n      padding: 8px 16px;\n      margin: 0 5px;\n      background: none;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .feedback-btn:hover {\n      background-color: #f0f0f0;\n    }\n\n    .feedback-btn.active {\n      background-color: #e0e0e0;\n      border-color: #999;\n    }\n\n    .feedback-btn span {\n      font-size: 18px;\n    }\n\n    .spinner {\n      display: inline-block;\n      width: 12px;\n      height: 12px;\n      border: 2px solid #ffffff;\n      border-radius: 50%;\n      border-top-color: transparent;\n      animation: spin 1s linear infinite;\n      margin-right: 8px;\n    }\n\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n\n    .feedback-error {\n      color: #dc3545;\n      margin: 8px 0;\n      font-size: 14px;\n    }\n\n    .feedback-success {\n      text-align: center;\n      padding: 10px;\n      animation: fadeIn 0.5s ease-out;\n    }\n\n    .success-animation {\n      position: relative;\n      margin: 0 auto;\n      width: 60px;\n      height: 60px;\n    }\n\n    .checkmark {\n      width: 46px;\n      height: 46px;\n      margin: 0 auto;\n      border-radius: 50%;\n      display: block;\n      position: relative;\n      z-index: 1;\n      animation: scaleIn 0.3s ease-in-out;\n    }\n\n    .feedback-title {\n      color: #4CAF50;\n      font-size: 1.2em;\n      margin: 10px 0 5px;\n      animation: slideUp 0.5s ease-out 0.3s both;\n    }\n\n    .feedback-message {\n      color: #666;\n      font-size: 0.9em;\n      margin: 5px 0;\n      animation: slideUp 0.5s ease-out 0.4s both;\n    }\n\n    .success-ripple {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      width: 80px;\n      height: 80px;\n      border-radius: 50%;\n      border: 3px solid #4CAF50;\n      opacity: 0;\n      animation: ripple 1s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n    }\n\n    .checkmark {\n      width: 56px;\n      height: 56px;\n      margin: 0 auto;\n      border-radius: 50%;\n      display: block;\n      position: relative;\n      z-index: 1;\n      animation: scaleIn 0.3s ease-in-out;\n    }\n\n    .checkmark-circle {\n      stroke: #4CAF50;\n      stroke-width: 2;\n      stroke-dasharray: 166;\n      stroke-dashoffset: 166;\n      animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n    }\n\n    .checkmark-check {\n      stroke: #4CAF50;\n      stroke-width: 2;\n      stroke-dasharray: 48;\n      stroke-dashoffset: 48;\n      animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.6s forwards;\n    }\n\n    .feedback-title {\n      color: #4CAF50;\n      font-size: 1.5em;\n      margin: 15px 0 5px;\n      animation: slideUp 0.5s ease-out 0.3s both;\n    }\n\n    .feedback-message {\n      color: #666;\n      font-size: 1em;\n      margin: 5px 0 15px;\n      animation: slideUp 0.5s ease-out 0.4s both;\n    }\n\n    .feedback-icons {\n      display: flex;\n      justify-content: center;\n      gap: 15px;\n      margin-top: 15px;\n      animation: slideUp 0.5s ease-out 0.5s both;\n    }\n\n    .icon-wrapper {\n      width: 40px;\n      height: 40px;\n      background: #f0f9f0;\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: transform 0.3s ease;\n    }\n\n    .icon-wrapper:hover {\n      transform: scale(1.1);\n    }\n\n    .feedback-icon {\n      width: 24px;\n      height: 24px;\n      fill: #4CAF50;\n    }\n\n    @keyframes fadeIn {\n      from { opacity: 0; }\n      to { opacity: 1; }\n    }\n\n    @keyframes slideUp {\n      from {\n        opacity: 0;\n        transform: translateY(20px);\n      }\n      to {\n        opacity: 1;\n        transform: translateY(0);\n      }\n    }\n\n    @keyframes ripple {\n      0% {\n        opacity: 1;\n        transform: translate(-50%, -50%) scale(0.3);\n      }\n      100% {\n        opacity: 0;\n        transform: translate(-50%, -50%) scale(2);\n      }\n    }\n\n    @keyframes scaleIn {\n      from {\n        transform: scale(0);\n        opacity: 0;\n      }\n      to {\n        transform: scale(1);\n        opacity: 1;\n      }\n    }\n\n    @keyframes stroke {\n      100% {\n        stroke-dashoffset: 0;\n      }\n    }\n\n    .feedback-already-submitted {\n      text-align: center;\n      padding: 10px;\n      animation: fadeIn 0.5s ease-out;\n    }\n\n    .info-animation {\n      position: relative;\n      margin: 0 auto;\n      width: 60px;\n      height: 60px;\n    }\n\n    .info-icon {\n      width: 46px;\n      height: 46px;\n      margin: 0 auto;\n      border-radius: 50%;\n      display: block;\n      position: relative;\n      z-index: 1;\n      animation: scaleIn 0.3s ease-in-out;\n    }\n\n    .info-circle {\n      stroke: #3498db;\n      stroke-width: 2;\n      stroke-dasharray: 166;\n      stroke-dashoffset: 166;\n      animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n    }\n\n    .info-mark {\n      stroke: #3498db;\n      stroke-width: 2;\n      stroke-dasharray: 48;\n      stroke-dashoffset: 48;\n      animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.6s forwards;\n    }\n\n    .feedback-already-submitted .feedback-title {\n      color: #3498db;\n      font-size: 1.2em;\n      margin: 10px 0 5px;\n      animation: slideUp 0.5s ease-out 0.3s both;\n    }\n\n    .feedback-already-submitted .feedback-message {\n      color: #666;\n      font-size: 0.9em;\n      margin: 5px 0;\n      animation: slideUp 0.5s ease-out 0.4s both;\n    }\n  `;\n\n  const style = document.createElement(\"style\");\n  style.innerHTML = cssRules;\n  document.head.appendChild(style);\n\n  // Create image overlay\n  function createImageOverlay(imageElement) {\n    let wrapper = imageElement.closest(\".image-wrapper\");\n    if (!wrapper) {\n      wrapper = document.createElement(\"div\");\n      wrapper.className = \"image-wrapper\";\n      imageElement.parentNode.insertBefore(wrapper, imageElement);\n      wrapper.appendChild(imageElement);\n    }\n\n    const overlay = document.createElement(\"div\");\n    overlay.className = \"image-overlay\";\n    overlay.setAttribute(\"data-for-image\", imageElement.src); // Store the image URL\n    wrapper.appendChild(overlay);\n\n    // Add click handler for the overlay\n    overlay.addEventListener(\n      \"click\",\n      (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        showConsentPopup(overlay, imageElement.src);\n      },\n      true\n    );\n\n    return overlay;\n  }\n\n  // Add overlay to image\n  function addOverlay(imageElement, index) {\n    if (imageElement.getAttribute(\"aria-hidden\") === \"true\") {\n      imageElement.removeAttribute(\"aria-hidden\");\n    }\n\n    createImageOverlay(imageElement);\n  }\n\n  // Debounce timer and delay\n  let debounceTimer;\n  const DEBOUNCE_DELAY = 300;\n\n  // Log errors\n  function logError(error) {\n    // Additional logging mechanisms can be added here\n  }\n\n  // Global error event listener\n  window.addEventListener(\"error\", (event) => {\n    logError(event.error);\n  });\n\n  const getValidOrigin = () => {\n    const currentOrigin = window.location.origin;\n    if (allowedOrigins.includes(currentOrigin)) {\n      return currentOrigin;\n    }\n    return null;\n  };\n})();\n"],"names":["debounce","func","wait","timeout","args","clearTimeout","setTimeout","bodyObserver","observer","extensionEnabled","siteEnabled","currentSite","removeAllOverlays","document","querySelectorAll","forEach","overlay","remove","async","shouldProcessImage","items","Promise","resolve","reject","chrome","storage","sync","get","runtime","lastError","enableOverlay","error","console","addOrUpdateOverlayToImages","allImages","traverse","node","nodeType","Node","ELEMENT_NODE","tagName","toLowerCase","dataset","overlayProcessed","push","shadowRoot","childNodes","child","body","img","index","width","height","getAttribute","classList","contains","complete","naturalWidth","processImage","addEventListener","once","IntersectionObserver","entries","entry","isIntersecting","addOrUpdateOverlayToImage","unobserve","threshold","observe","onerror","onload","uniqueId","Date","now","querySelector","src","createElement","className","forImage","overlayId","iconImg","getURL","style","cssText","appendChild","onclick","e","stopPropagation","preventDefault","existingPopup","highestQualityUrl","canvas","naturalHeight","getContext","drawImage","toDataURL","originalSrc","highQualityUrl","closest","parsedUrl","URL","pathname","searchParams","delete","set","toString","originalExtension","split","pop","includes","endsWith","url","getHighestQualityImageUrl","target","imageUrl","popup","setAttribute","innerHTML","display","updatePopupPosition","overlayRect","getBoundingClientRect","left","right","window","pageXOffset","top","pageYOffset","offsetWidth","innerWidth","maxTop","innerHeight","offsetHeight","Math","max","min","position","debouncedUpdate","storeDataCheckbox","storeData","checked","filename","mimeType","format","jpg","jpeg","png","gif","webp","getMimeType","fetch","then","response","ok","Error","status","arrayBuffer","uint8Array","Uint8Array","crypto","subtle","digest","hashBuffer","hashHex","Array","from","map","b","padStart","join","sendMessage","action","imageData","size","length","sha256Hash","origin","location","displayAnalysisResults","message","catch","sendImageForAnalysis","removeEventListener","disconnect","showConsentPopup","messageDiv","textContent","bottom","padding","borderRadius","color","zIndex","boxShadow","opacity","transition","backgroundColor","showMessage","parentElement","updateOverlayPosition","rect","viewportHeight","viewportWidth","isPartiallyVisible","isSlideshow","isVideo","offsetParent","overlayEventListenersAdded","scrollHandler","resizeHandler","passive","MutationObserver","mutations","mutation","type","attributeName","attributes","attributeFilter","results","analysis","sageMakerAnalysis","probability","toFixed","confidenceColor","titleText","isFake","imageHash","head","feedbackBtns","feedbackComment","submitBtn","btn","add","disabled","authToken","local","log","decodedToken","token","base64","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","slice","decoded","JSON","parse","username","decodeJWT","userId","selectedFeedback","find","comment","value","trim","feedbackType","feedbackData","success","feedbackSection","marginTop","newHeight","errorMsg","parentNode","insertBefore","nextSibling","closeX","debouncedAddOrUpdateOverlayToImages","handleDOMChanges","mutationsList","addedNodes","debounceTimer","DEBOUNCE_DELAY","checkForNewImages","setupExtension","id","hostname","initializeOverlay","childList","subtree","setInterval","reload","onMessage","addListener","request","sender","sendResponse","changes","newValue","settings","event"],"sourceRoot":""}