{"version":3,"file":"background.js","mappings":"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","sources":["webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/buffer_utils.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/runtime/base64url.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/util/errors.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/runtime/webcrypto.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/crypto_key.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/invalid_key_input.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/runtime/is_key_like.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/is_object.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/is_jwk.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/runtime/jwk_to_key.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/runtime/normalize_key.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/runtime/verify.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/runtime/get_sign_verify_key.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/runtime/check_key_length.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/runtime/subtle_dsa.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/check_key_type.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/key/import.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/jws/compact/verify.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/jws/flattened/verify.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/is_disjoint.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/validate_crit.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/validate_algorithms.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/epoch.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/secs.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/lib/jwt_claims_set.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/jwt/verify.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/jwks/local.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/jwks/remote.js","webpack://chrome-gmail-poc/./node_modules/jose/dist/browser/runtime/fetch_jwks.js","webpack://chrome-gmail-poc/./src/background.js"],"sourcesContent":["import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n","export class JOSEError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nJOSEError.code = 'ERR_JOSE_GENERIC';\nexport class JWTClaimValidationFailed extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTClaimValidationFailed.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\nexport class JWTExpired extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTExpired.code = 'ERR_JWT_EXPIRED';\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nJOSEAlgNotAllowed.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nJOSENotSupported.code = 'ERR_JOSE_NOT_SUPPORTED';\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nJWEDecryptionFailed.code = 'ERR_JWE_DECRYPTION_FAILED';\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n}\nJWEInvalid.code = 'ERR_JWE_INVALID';\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n}\nJWSInvalid.code = 'ERR_JWS_INVALID';\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n}\nJWTInvalid.code = 'ERR_JWT_INVALID';\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n}\nJWKInvalid.code = 'ERR_JWK_INVALID';\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n}\nJWKSInvalid.code = 'ERR_JWKS_INVALID';\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nJWKSNoMatchingKey.code = 'ERR_JWKS_NO_MATCHING_KEY';\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nJWKSMultipleMatchingKeys.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\nexport class JWKSTimeout extends JOSEError {\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_TIMEOUT';\n    }\n}\nJWKSTimeout.code = 'ERR_JWKS_TIMEOUT';\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\nJWSSignatureVerificationFailed.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n","export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n","function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    if (isCryptoKey(key)) {\n        return true;\n    }\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nexport const types = ['CryptoKey'];\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return isJWK(key) && key.kty === 'oct' && typeof key.k === 'string';\n}\n","import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        jwk.ext ?? false,\n        jwk.key_ops ?? keyUsages,\n    ];\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n","import { isJWK } from '../lib/is_jwk.js';\nimport { decode } from './base64url.js';\nimport importJWK from './jwk_to_key.js';\nconst exportKeyValue = (k) => decode(k);\nlet privCache;\nlet pubCache;\nconst isKeyObject = (key) => {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nconst importAndCache = async (cache, key, jwk, alg, freeze = false) => {\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst normalizePublicKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        delete jwk.d;\n        delete jwk.dp;\n        delete jwk.dq;\n        delete jwk.p;\n        delete jwk.q;\n        delete jwk.qi;\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        pubCache || (pubCache = new WeakMap());\n        return importAndCache(pubCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        pubCache || (pubCache = new WeakMap());\n        const cryptoKey = importAndCache(pubCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nconst normalizePrivateKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        privCache || (privCache = new WeakMap());\n        return importAndCache(privCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        privCache || (privCache = new WeakMap());\n        const cryptoKey = importAndCache(privCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nexport default { normalizePublicKey, normalizePrivateKey };\n","import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\nexport default verify;\n","import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nimport normalize from './normalize_key.js';\nexport default async function getCryptoKey(alg, key, usage) {\n    if (usage === 'sign') {\n        key = await normalize.normalizePrivateKey(key, alg);\n    }\n    if (usage === 'verify') {\n        key = await normalize.normalizePublicKey(key, alg);\n    }\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array', 'JSON Web Key'));\n}\n","export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined && key.use !== 'sig') {\n        throw new TypeError('Invalid key for this operation, when present its use must be sig');\n    }\n    if (key.key_ops !== undefined && key.key_ops.includes?.(usage) !== true) {\n        throw new TypeError(`Invalid key for this operation, when present its key_ops must include ${usage}`);\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, when present its alg must be ${alg}`);\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (allowJwk && jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array', allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (allowJwk && jwk.isJWK(key)) {\n        switch (usage) {\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nfunction checkKeyType(allowJwk, alg, key, usage) {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n}\nexport default checkKeyType.bind(undefined, false);\nexport const checkKeyTypeWithJwk = checkKeyType.bind(undefined, true);\n","import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport { isJWK } from '../../lib/is_jwk.js';\nimport { importJWK } from '../../key/import.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n        checkKeyTypeWithJwk(alg, key, 'verify');\n        if (isJWK(key)) {\n            key = await importJWK(key, alg);\n        }\n    }\n    else {\n        checkKeyTypeWithJwk(alg, key, 'verify');\n    }\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n","export default (date) => Math.floor(date.getTime() / 1000);\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nclass LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token?.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate && alg === 'EdDSA') {\n                candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        if (length !== 1) {\n            const error = new JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch { }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await importJWK({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    const localJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(localJWKSet, {\n        jwks: {\n            value: () => clone(set._jwks),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return localJWKSet;\n}\n","import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSNoMatchingKey } from '../util/errors.js';\nimport { createLocalJWKSet } from './local.js';\nimport isObject from '../lib/is_object.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nlet USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n    const NAME = 'jose';\n    const VERSION = 'v5.9.6';\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nexport const jwksCache = Symbol();\nfunction isFreshJwksCache(input, cacheMaxAge) {\n    if (typeof input !== 'object' || input === null) {\n        return false;\n    }\n    if (!('uat' in input) || typeof input.uat !== 'number' || Date.now() - input.uat >= cacheMaxAge) {\n        return false;\n    }\n    if (!('jwks' in input) ||\n        !isObject(input.jwks) ||\n        !Array.isArray(input.jwks.keys) ||\n        !Array.prototype.every.call(input.jwks.keys, isObject)) {\n        return false;\n    }\n    return true;\n}\nclass RemoteJWKSet {\n    constructor(url, options) {\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options?.agent, headers: options?.headers };\n        this._timeoutDuration =\n            typeof options?.timeoutDuration === 'number' ? options?.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof options?.cooldownDuration === 'number' ? options?.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof options?.cacheMaxAge === 'number' ? options?.cacheMaxAge : 600000;\n        if (options?.[jwksCache] !== undefined) {\n            this._cache = options?.[jwksCache];\n            if (isFreshJwksCache(options?.[jwksCache], this._cacheMaxAge)) {\n                this._jwksTimestamp = this._cache.uat;\n                this._local = createLocalJWKSet(this._cache.jwks);\n            }\n        }\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._local || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await this._local(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return this._local(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        const headers = new Headers(this._options.headers);\n        if (USER_AGENT && !headers.has('User-Agent')) {\n            headers.set('User-Agent', USER_AGENT);\n            this._options.headers = Object.fromEntries(headers.entries());\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            this._local = createLocalJWKSet(json);\n            if (this._cache) {\n                this._cache.uat = Date.now();\n                this._cache.jwks = json;\n            }\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    const remoteJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(remoteJWKSet, {\n        coolingDown: {\n            get: () => set.coolingDown(),\n            enumerable: true,\n            configurable: false,\n        },\n        fresh: {\n            get: () => set.fresh(),\n            enumerable: true,\n            configurable: false,\n        },\n        reload: {\n            value: () => set.reload(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n        reloading: {\n            get: () => !!set._pendingFetch,\n            enumerable: true,\n            configurable: false,\n        },\n        jwks: {\n            value: () => set._local?.jwks(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return remoteJWKSet;\n}\nexport const experimental_jwksCache = jwksCache;\n","import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n","import { jwtVerify, createRemoteJWKSet } from \"jose\";\n\nlet authTabId = null;\n\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  console.log(\"Background received message:\", request);\n  if (request.action === \"showNotification\") {\n    chrome.notifications.create(\n      {\n        type: \"basic\",\n        iconUrl: \"icon.png\",\n        title: \"Hello World\",\n        message: \"You clicked the Hello World button!\",\n      },\n      () => {\n        sendResponse({ success: true });\n      }\n    );\n    return true; // Indicates we will send a response asynchronously\n  }\n\n  if (request.action === \"sendImage\") {\n    const {\n      url,\n      mimeType,\n      filename,\n      size,\n      sha256Hash,\n      origin,\n      storeData,\n      userId,\n    } = request.imageData;\n\n    // Create formData here\n    const createFormData = () => {\n      return fetch(url)\n        .then((response) => response.arrayBuffer())\n        .then((arrayBuffer) => {\n          const uint8Array = new Uint8Array(arrayBuffer);\n          const blob = new Blob([uint8Array], { type: mimeType });\n          const file = new File([blob], filename, { type: mimeType });\n\n          const formData = new FormData();\n          formData.append(\"image\", file);\n          formData.append(\"url\", url);\n          formData.append(\"mimeType\", mimeType);\n          formData.append(\"filename\", filename);\n          formData.append(\"size\", size.toString());\n          formData.append(\"sha256Hash\", sha256Hash);\n          formData.append(\"origin\", origin);\n          formData.append(\"storeData\", storeData.toString());\n          formData.append(\"userId\", userId);\n\n          return formData;\n        });\n    };\n\n    new Promise((resolve) => {\n      chrome.storage.local.get([\"authToken\"], function (result) {\n        resolve(result.authToken);\n      });\n    }).then((authToken) => {\n      if (!authToken) {\n        initiateAuthentication();\n        sendResponse({ error: \"Authentication required\" });\n      } else {\n        createFormData().then((formData) => {\n          fetch(\"https://api.realeyes.ai/analyze-image\", {\n            method: \"POST\",\n            body: formData,\n            headers: {\n              \"X-Origin\": origin,\n              Authorization: `Bearer ${authToken}`,\n            },\n          })\n            .then(async (response) => {\n              if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n              }\n              return response.json();\n            })\n            .then((data) => {\n              console.log(\"Background: Processed response:\", data);\n              sendResponse(data);\n            })\n            .catch((error) => {\n              console.error(\"Background: Error:\", error);\n              sendResponse({ error: error.message });\n            });\n        });\n      }\n    });\n\n    return true; // Indicates that the response is sent asynchronously\n  }\n\n  if (request.action === \"reloadContentScript\") {\n    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n      if (tabs[0]) {\n        chrome.tabs.executeScript(\n          tabs[0].id,\n          { file: \"social-content.js\" },\n          () => {\n            if (chrome.runtime.lastError) {\n              console.error(\n                \"Failed to reload content script:\",\n                chrome.runtime.lastError\n              );\n              sendResponse({\n                success: false,\n                error: chrome.runtime.lastError.message,\n              });\n            } else {\n              console.log(\"Content script reloaded successfully\");\n              sendResponse({ success: true });\n            }\n          }\n        );\n      } else {\n        sendResponse({ success: false, error: \"No active tab found\" });\n      }\n    });\n    return true; // Indicates that the response is sent asynchronously\n  }\n\n  if (request.action === \"authenticationComplete\") {\n    chrome.tabs.remove(sender.tab.id);\n  }\n\n  if (request.action === \"initiateAuthentication\") {\n    initiateAuthentication();\n  }\n\n  if (request.action === \"pageLoaded\") {\n    console.log(\"Background script received 'pageLoaded' message.\");\n    checkForAuthToken(sender.tab.id);\n  }\n\n  if (request.action === \"submitFeedback\") {\n    // Get the auth token first\n    chrome.storage.local.get([\"authToken\"], function (result) {\n      const authToken = result.authToken;\n\n      if (!authToken) {\n        console.error(\"No auth token found\");\n        sendResponse({ success: false, error: \"Authentication required\" });\n        return;\n      }\n\n      const { imageHash, feedbackType, comment, userId } = request.feedbackData;\n\n      fetch(\"https://api.realeyes.ai/submit-feedback\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Origin\": request.origin,\n          Authorization: `Bearer ${authToken}`,\n        },\n        body: JSON.stringify({\n          imageHash,\n          feedbackType,\n          comment,\n          userId,\n        }),\n      })\n        .then(async (response) => {\n          const data = await response.json();\n\n          // Handle 409 as a special case\n          if (response.status === 409) {\n            return sendResponse({\n              success: false,\n              alreadySubmitted: true,\n              message:\n                data.error ||\n                \"User has already submitted feedback for this image\",\n            });\n          }\n\n          // Handle other error cases\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n\n          // Handle success case\n          console.log(\"Feedback submitted successfully:\", data);\n          sendResponse({ success: true, data });\n        })\n        .catch((error) => {\n          console.error(\"Error submitting feedback:\", error);\n          sendResponse({\n            success: false,\n            error: error.message,\n            status: error.status,\n          });\n        });\n    });\n\n    return true; // Will respond asynchronously\n  }\n\n  return false; // For other messages, we're not sending a response\n});\n\nchrome.runtime.onInstalled.addListener(function () {\n  // Set default settings\n  const defaultSettings = {\n    enableOverlay: true,\n    facebook: true,\n    twitter: true,\n    instagram: true,\n    linkedin: true,\n    reddit: true,\n  };\n  chrome.storage.sync.set(defaultSettings);\n});\n\nchrome.storage.onChanged.addListener((changes, namespace) => {\n  if (namespace === \"sync\") {\n    console.log(\"Settings changed:\", changes);\n    chrome.tabs.query(\n      {\n        url: [\n          \"https://*.linkedin.com/*\",\n          \"https://*.facebook.com/*\",\n          \"https://*.twitter.com/*\",\n          \"https://*.x.com/*\",\n          \"https://*.instagram.com/*\",\n          \"https://*.reddit.com/*\",\n        ],\n      },\n      (tabs) => {\n        tabs.forEach((tab) => {\n          console.log(\"Sending settingsChanged message to tab:\", tab.id);\n          chrome.tabs.sendMessage(\n            tab.id,\n            { action: \"settingsChanged\", changes },\n            (response) => {\n              if (chrome.runtime.lastError) {\n                console.log(\n                  `Error sending settingsChanged message to tab ${tab.id}:`,\n                  chrome.runtime.lastError.message\n                );\n              } else {\n                console.log(`Settings updated successfully in tab ${tab.id}`);\n              }\n            }\n          );\n        });\n      }\n    );\n  }\n});\n\n// Function to log all stored data\nfunction logAllStoredData() {\n  chrome.storage.local.get(null, function (items) {\n    console.log(\n      \"All stored data (from background):\",\n      JSON.stringify(items, null, 2)\n    );\n    console.log(\"Storage size:\", Object.keys(items).length);\n  });\n}\n\n// Function to check if the user is authenticated\nfunction checkAuthentication() {\n  return new Promise((resolve) => {\n    chrome.storage.local.get([\"authToken\"], function (result) {\n      resolve(result.authToken);\n    });\n  });\n}\n\n// Function to initiate authentication\nfunction initiateAuthentication() {\n  console.log(\"Initiating authentication\");\n  if (authTabId !== null) {\n    console.log(\"Authentication tab already open, focusing on it\");\n    chrome.tabs.update(authTabId, { active: true });\n    return;\n  }\n\n  chrome.tabs.create(\n    { url: \"https://realeyes.ai/upload-image\" },\n    function (tab) {\n      console.log(\"Authentication tab created:\", tab.id);\n      authTabId = tab.id;\n      chrome.tabs.onRemoved.addListener(function (closedTabId) {\n        if (closedTabId === authTabId) {\n          console.log(\"Authentication tab closed\");\n          authTabId = null;\n        }\n      });\n      chrome.tabs.onUpdated.addListener(function listener(tabId, info) {\n        if (\n          tabId === tab.id &&\n          info.url &&\n          info.url.startsWith(\"https://realeyes.ai/upload-image\")\n        ) {\n          console.log(\"Authentication page loaded, checking for auth token\");\n          chrome.tabs.onUpdated.removeListener(listener);\n          checkForAuthToken(tabId);\n        }\n      });\n    }\n  );\n}\n\nfunction checkForAuthToken(tabId, retryCount = 0) {\n  const MAX_RETRIES = 5;\n  console.log(\"Checking for auth token\");\n  chrome.cookies.get(\n    { url: \"https://realeyes.ai\", name: \"opp_access_token\" },\n    async function (cookie) {\n      if (cookie) {\n        console.log(\"Auth token found in cookie:\", cookie.value);\n        if (await validateJWT(cookie.value)) {\n          // Store the auth token securely in extension's local storage\n          chrome.storage.local.set({ authToken: cookie.value }, function () {\n            console.log(\"Valid auth token saved to local storage\");\n            chrome.tabs.remove(tabId);\n          });\n        } else {\n          console.log(\"Invalid or expired auth token\");\n          chrome.storage.local.remove(\"authToken\");\n          chrome.tabs.remove(tabId);\n          // Optionally, notify the user that authentication failed\n        }\n      } else {\n        console.log(\"Auth token not found\");\n        if (retryCount < MAX_RETRIES) {\n          console.log(\n            `Retrying in 1 second (attempt ${retryCount + 1}/${MAX_RETRIES})`\n          );\n          setTimeout(() => checkForAuthToken(tabId, retryCount + 1), 1000);\n        } else {\n          console.log(\"Max retries reached. Authentication failed.\");\n          chrome.tabs.remove(tabId);\n          // Optionally, notify the user that authentication failed after retries\n        }\n      }\n    }\n  );\n}\n\nasync function verifyToken(token) {\n  try {\n    const secret = new TextEncoder().encode(process.env.JWT_SECRET);\n    await jwtVerify(token, secret);\n    return true;\n  } catch (error) {\n    console.error(\"Token verification failed:\", error);\n    return false;\n  }\n}\n\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  if (message.action === \"getAuthToken\") {\n    chrome.cookies.get(\n      { url: \"https://realeyes.ai\", name: \"opp_access_token\" },\n      async function (cookie) {\n        if (cookie && (await verifyToken(cookie.value))) {\n          chrome.storage.local.set({ authToken: cookie.value }, function () {\n            console.log(\"Valid auth token saved to local storage\");\n            sendResponse({ success: true });\n          });\n        } else {\n          console.log(\"Invalid or expired auth token\");\n          chrome.storage.local.remove(\"authToken\");\n          sendResponse({ success: false });\n        }\n      }\n    );\n    return true; // Indicates we will respond asynchronously\n  }\n});\n\n// Add this to check the auth state periodically\nsetInterval(() => {\n  chrome.storage.local.get([\"authToken\"], function (result) {\n    console.log(\"Periodic check - Auth token:\", result.authToken);\n    if (result.authToken) {\n      if (validateJWT(result.authToken)) {\n        console.log(\"Periodic auth check: Valid token exists\");\n      } else {\n        console.log(\"Periodic auth check: Token is invalid or expired\");\n        chrome.storage.local.remove(\"authToken\", function () {\n          console.log(\"Auth token removed\");\n          logAllStoredData(); // Log all data after removal\n        });\n      }\n    } else {\n      console.log(\"Periodic auth check: No token\");\n    }\n  });\n}, 60000); // Check every minute\n\n// Log all stored data every 2 minutes\nsetInterval(logAllStoredData, 120000);\n\n// Call logAllStoredData immediately when the background script loads\nlogAllStoredData();\n\nasync function validateJWT(token) {\n  try {\n    const region = \"us-east-2\"; // Replace with your actual AWS region\n    const userPoolId = \"us-east-2_1jhX1tAKk\"; // Replace with your actual User Pool ID\n    const expectedIssuer = `https://cognito-idp.${region}.amazonaws.com/${userPoolId}`;\n\n    const jwksUrl = `${expectedIssuer}/.well-known/jwks.json`;\n\n    const JWKS = createRemoteJWKSet(new URL(jwksUrl));\n\n    const { payload, protectedHeader } = await jwtVerify(token, JWKS, {\n      issuer: expectedIssuer,\n    });\n\n    // Check if the token has expired\n    const currentTime = Math.floor(Date.now() / 1000);\n    if (payload.exp && payload.exp < currentTime) {\n      console.log(\"Token has expired\");\n      return false;\n    }\n\n    // Add any additional validation checks here\n\n    return true;\n  } catch (error) {\n    console.error(\"Error validating JWT:\", error);\n    return false;\n  }\n}\n\n// Log storage when background script initializes\nlogAllStoredData();\n\n// Listen for messages\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  console.log(\"Background received message:\", request);\n\n  if (request.action === \"setAuthToken\") {\n    console.log(\"Attempting to save auth token:\", request.token);\n    chrome.storage.local.set({ authToken: request.token }, function () {\n      if (chrome.runtime.lastError) {\n        console.error(\"Error saving auth token:\", chrome.runtime.lastError);\n      } else {\n        console.log(\"Auth token saved successfully\");\n        logAllStoredData(); // Log all data after saving\n      }\n    });\n  }\n});\n\n// Log storage periodically (every 5 minutes)\nsetInterval(logAllStoredData, 300000);\n"],"names":["TextEncoder","decoder","TextDecoder","decode","input","encoded","Uint8Array","replace","binary","atob","bytes","length","i","charCodeAt","decodeBase64","TypeError","JOSEError","Error","constructor","message","options","super","this","code","name","captureStackTrace","JWTClaimValidationFailed","payload","claim","reason","cause","JWTExpired","JOSEAlgNotAllowed","arguments","JOSENotSupported","JWSInvalid","JWTInvalid","JWKSInvalid","JWKSNoMatchingKey","JWKSMultipleMatchingKeys","Symbol","asyncIterator","JWKSTimeout","JWSSignatureVerificationFailed","isCryptoKey","key","CryptoKey","unusable","prop","isAlgorithm","algorithm","getHashLength","hash","parseInt","slice","checkSigCryptoKey","alg","usages","expected","getNamedCurve","namedCurve","some","includes","msg","last","pop","join","checkUsage","actual","types","filter","Boolean","withAlg","toStringTag","isObject","value","Object","prototype","toString","call","getPrototypeOf","proto","isJWK","kty","async","jwk","keyUsages","d","crv","subtleMapping","rest","ext","key_ops","keyData","use","subtle","importKey","exportKeyValue","k","pubCache","isKeyObject","importAndCache","cache","freeze","cached","get","cryptoKey","set","signature","data","usage","export","format","dp","dq","p","q","qi","WeakMap","startsWith","modulusLength","saltLength","verify","tag","jwkMatchesOp","undefined","checkKeyType","allowJwk","test","type","symmetricTypeCheck","asymmetricTypeCheck","bind","checkKeyTypeWithJwk","importJWK","oth","compactVerify","jws","protectedHeader","split","verified","protected","header","parsedProt","JSON","parse","headers","sources","acc","parameters","keys","size","parameter","has","add","Set","joseHeader","b64","Err","recognizedDefault","recognizedOption","crit","Array","isArray","recognized","Map","entries","algorithms","option","s","resolvedKey","buffers","reduce","buf","buffer","concat","encode","result","unprotectedHeader","flattenedVerify","REGEX","str","matched","exec","parseFloat","numericDate","toLowerCase","Math","round","minute","hour","day","normalizeTyp","encodedPayload","typ","requiredClaims","issuer","subject","audience","maxTokenAge","presenceCheck","push","reverse","iss","sub","audOption","audPayload","aud","tolerance","clockTolerance","secs","currentDate","now","date","Date","floor","getTime","iat","nbf","exp","age","jwtVerify","jwt","isJWKLike","clone","obj","structuredClone","stringify","LocalJWKSet","jwks","_cached","every","isJWKSLike","_jwks","getKey","token","kid","getKtyFromAlg","candidates","candidate","error","importWithAlgCache","createLocalJWKSet","localJWKSet","defineProperties","enumerable","configurable","writable","USER_AGENT","navigator","userAgent","jwksCache","RemoteJWKSet","url","URL","cacheMaxAge","_url","href","_options","agent","_timeoutDuration","timeoutDuration","_cooldownDuration","cooldownDuration","_cacheMaxAge","_cache","uat","_jwksTimestamp","_local","coolingDown","fresh","reload","err","_pendingFetch","WebSocketPair","EdgeRuntime","Headers","fromEntries","timeout","controller","id","timedOut","AbortController","setTimeout","abort","response","fetch","signal","redirect","catch","clearTimeout","status","json","then","authTabId","logAllStoredData","chrome","storage","local","items","console","log","initiateAuthentication","tabs","update","active","create","tab","onRemoved","addListener","closedTabId","onUpdated","listener","tabId","info","removeListener","checkForAuthToken","retryCount","cookies","cookie","validateJWT","authToken","remove","expectedIssuer","jwksUrl","JWKS","createRemoteJWKSet","remoteJWKSet","reloading","currentTime","runtime","onMessage","request","sender","sendResponse","action","notifications","iconUrl","title","success","mimeType","filename","sha256Hash","origin","storeData","userId","imageData","createFormData","arrayBuffer","uint8Array","blob","Blob","file","File","formData","FormData","append","Promise","resolve","method","body","Authorization","ok","query","currentWindow","executeScript","lastError","imageHash","feedbackType","comment","feedbackData","alreadySubmitted","onInstalled","sync","enableOverlay","facebook","twitter","instagram","linkedin","reddit","onChanged","changes","namespace","forEach","sendMessage","secret","process","env","JWT_SECRET","verifyToken","setInterval"],"sourceRoot":""}