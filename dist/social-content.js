(()=>{function e(e,t){let n;return function(...o){clearTimeout(n),n=setTimeout((()=>{clearTimeout(n),e(...o)}),t)}}function t(e){try{const t=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),n=decodeURIComponent(atob(t).split("").map((e=>"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2))).join("")),o=JSON.parse(n);return console.log("Decoded JWT payload:",o),console.log("Extracted userId:",o.username),o}catch(e){return console.error("Error decoding JWT:",e),null}}let n,o,a=!1,r=!1,i=null;function s(){document.querySelectorAll(".image-overlay").forEach((e=>e.remove()))}async function c(){try{const e=await new Promise(((e,t)=>{chrome.storage.sync.get(["enableOverlay","facebook","twitter","instagram","linkedin","reddit"],(n=>{chrome.runtime.lastError?t(chrome.runtime.lastError):e(n)}))}));return a=!1!==e.enableOverlay,r=!1!==e[i],a&&r}catch(e){return console.error("Error in shouldProcessImage:",e),!1}}async function l(){if(!await c())return void s();const e=[];(function t(n){n.nodeType===Node.ELEMENT_NODE&&("img"!==n.tagName.toLowerCase()||n.dataset.overlayProcessed||e.push(n),n.shadowRoot&&t(n.shadowRoot),n.childNodes.forEach((e=>t(e))))})(document.body),"instagram"===i&&document.querySelectorAll('img[srcset], img[src*="instagram"]').forEach((t=>{t.dataset.overlayProcessed||e.push(t)})),"reddit"===i&&document.querySelectorAll('img[alt="Post image"]').forEach((t=>e.push(t))),e.forEach(((e,t)=>{if(e.width>50&&e.height>50||e.getAttribute("width")>50&&e.getAttribute("height")>50||e.classList.contains("media-lightbox-img"))try{e.complete&&e.naturalWidth>0?d(e,t):e.addEventListener("load",(()=>{d(e,t)}),{once:!0})}catch(e){console.error("Error processing image:",e)}else e.dataset.overlayProcessed="skipped"}))}function d(e,t){if("true"===e.dataset.overlayProcessed)return;const n=new IntersectionObserver((o=>{o.forEach((o=>{o.isIntersecting&&((e.width>100&&e.height>100||"video"===e.tagName.toLowerCase())&&u(e,t),n.unobserve(e))}))}),{threshold:.1});n.observe(e),e.dataset.overlayProcessed="true",e.onerror=function(){},e.onload=function(){(e.width>100&&e.height>100||"video"===e.tagName.toLowerCase())&&u(e,t)}}function u(n,o){const a=`overlay-${o}-${Date.now()}`;let r=document.querySelector(`.image-overlay[data-for-image="${n.src}"]`);if(!r){r=document.createElement("div"),r.className="image-overlay",r.dataset.forImage=n.src,r.dataset.overlayId=a;const o=document.createElement("img");o.src=chrome.runtime.getURL("icons/realeyes-ai-icon.png"),o.style.cssText=`\n        width: 20px;\n        height: 20px;\n        object-fit: contain;\n        ${"reddit"===i?"margin-top: 16px;":""}\n      `,r.style.cssText="\n            position: absolute;\n            width: 30px;\n            height: 30px;\n            background-color: rgba(255, 255, 255, 0.4);\n            border-radius: 50%;\n            cursor: pointer;\n            z-index: 2147483647;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 20px;\n            pointer-events: auto;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n            opacity: 0.5;\n            transition: opacity 0.3s ease, background-color 0.3s ease, display 0.3s ease;\n        ",r.appendChild(o),r.onclick=o=>{o.stopPropagation(),o.preventDefault();let s=document.querySelector(`.consent-popup[data-for-image="${n.src}"]`);if(s||(s=document.querySelector(`.consent-popup[data-overlay-id="${a}"]`)),s)return void s.remove();const c=function(e){if("instagram"===i){const t=document.createElement("canvas");t.width=e.naturalWidth,t.height=e.naturalHeight,t.getContext("2d").drawImage(e,0,0);try{return t.toDataURL("image/jpeg")}catch(t){return console.error("Failed to get image data:",t),e.src}}const t=e.src;let n=t;if("linkedin"===i){if(null!==e.closest(".feed-shared-celebration-image"))return t;try{const e=new URL(t),o=e.pathname;e.searchParams.delete("w"),e.searchParams.delete("h"),e.searchParams.set("w","1000"),e.searchParams.set("h","1000"),n=e.toString();const a=o.split(".").pop().toLowerCase();["jpg","jpeg","png","gif","webp"].includes(a)&&(n.toLowerCase().endsWith(`.${a}`)||(n+=`.${a}`))}catch(e){console.error("Failed to parse LinkedIn image URL:",e),n=t}}else if("instagram"===i&&t.includes("&_nc_ht="))try{const e=new URL(t);e.searchParams.delete("_nc_sid"),e.searchParams.delete("_nc_ohc"),e.searchParams.delete("_nc_ht"),e.searchParams.delete("edm"),e.searchParams.delete("oh"),e.searchParams.delete("oe"),n=e.toString()}catch(e){console.error("Failed to parse Instagram image URL:",e)}return n}(n);c?function(n,o,a){let r=document.querySelector(`.consent-popup[data-for-image="${o}"]`);if(r||(r=document.querySelector(`.consent-popup[data-overlay-id="${a}"]`)),r)return r;document.querySelectorAll(".consent-popup").forEach((e=>e.remove()));const i=document.createElement("div");i.className="consent-popup",i.setAttribute("data-for-image",o),i.setAttribute("data-overlay-id",a),i.innerHTML='\n        <p class="consent-message">Analyze this image?</p>\n        <div class="consent-buttons">\n            <button class="confirm-btn">Analyze Now</button>\n            <button class="cancel-btn">Skip</button>\n        </div>\n        <div class="consent-options">\n            <label class="store-data-option">\n                <input type="checkbox" class="store-data-checkbox" id="storeImageData" checked>\n                <span>Help us improve detection by storing this image</span>\n            </label>\n        </div>\n    ',document.body.appendChild(i);const s=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting?(i.style.display="flex",c()):i.style.display="none"}))}),{threshold:.1});s.observe(n);const c=()=>{if("none"===i.style.display)return;const e=n.getBoundingClientRect();let t=e.right+window.pageXOffset+10,o=e.top+window.pageYOffset;t+i.offsetWidth>window.innerWidth-10+window.pageXOffset&&(t=e.left+window.pageXOffset-i.offsetWidth-10);const a=window.innerHeight+window.pageYOffset-i.offsetHeight-10;o=Math.max(10+window.pageYOffset,Math.min(o,a)),i.style.position="absolute",i.style.left=`${t}px`,i.style.top=`${o}px`};setTimeout(c,0);const l=e(c,100);window.addEventListener("resize",l),window.addEventListener("scroll",l),i.querySelector(".confirm-btn")?.addEventListener("click",(async e=>{e.preventDefault();const n=i.querySelector("#storeImageData"),a=!!n&&n.checked;i.innerHTML='<div class="loading-indicator">Analyzing...</div>',await function(e,n,o){let a=e.split("/").pop().split("?")[0],r="image/jpeg";chrome.storage.local.get(["authToken"],(async function(i){const s=i.authToken;if(!s)return void m(n,"Authentication required. Please log in and try again.","error");const c=t(s),l=c?.username||null;if(e.includes("twimg.com")){const t=new URL(e).searchParams.get("format");t&&(a+=`.${t}`,r=`image/${t}`)}else r=function(e){return{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",gif:"image/gif",webp:"image/webp"}[e.split(".").pop().toLowerCase()]||"application/octet-stream"}(a);fetch(e).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.arrayBuffer()})).then((e=>{const t=new Uint8Array(e);return crypto.subtle.digest("SHA-256",t).then((e=>{const n=Array.from(new Uint8Array(e)).map((e=>e.toString(16).padStart(2,"0"))).join("");return{uint8Array:t,hashHex:n}}))})).then((({uint8Array:t,hashHex:i})=>{chrome.runtime.sendMessage({action:"sendImage",imageData:{url:e,mimeType:r,filename:a,size:t.length,sha256Hash:i,origin:window.location.origin,storeData:o,userId:l}},(e=>{chrome.runtime.lastError?m(n,"Error: "+chrome.runtime.lastError.message,"error"):"Authentication required"===e.error?m(n,"Authentication required. Please log in and try again.","error"):m(n,e,"success")}))})).catch((e=>{console.error("Error:",e),m(n,"Error: "+e.message,"error")}))}))}(o,i,a)})),i.querySelector(".cancel-btn")?.addEventListener("click",(()=>{window.removeEventListener("resize",l),window.removeEventListener("scroll",l),s.disconnect(),i.remove()}))}(r,c,a):function(){const e=document.createElement("div");e.textContent="No suitable image found.",e.style.position="fixed",e.style.bottom="20px",e.style.right="20px",e.style.padding="10px 20px",e.style.borderRadius="5px",e.style.color="#fff",e.style.zIndex="10000",e.style.boxShadow="0 2px 8px rgba(0, 0, 0, 0.2)",e.style.opacity="0",e.style.transition="opacity 0.5s ease-in-out",e.style.backgroundColor="#f44336",document.body.appendChild(e),e.offsetWidth,e.style.opacity="1",setTimeout((()=>{e.style.opacity="0",e.addEventListener("transitionend",(()=>{e.remove()}))}),3e3)}()},n.parentElement.appendChild(r),r.addEventListener("mouseenter",(()=>{r.style.opacity="1",r.style.backgroundColor="rgba(255, 255, 255, 0.8)"})),r.addEventListener("mouseleave",(()=>{r.style.opacity="0.5",r.style.backgroundColor="rgba(255, 255, 255, 0.4)"}))}const s=e((()=>{const e=n.getBoundingClientRect(),t=window.innerHeight,o=window.innerWidth,a=e.top<t&&e.bottom>0&&e.left<o&&e.right>0,i=null!==n.closest(".media-lightbox-img"),s="video"===n.tagName.toLowerCase()||n.querySelector("video");if(!a||!(e.width>100&&e.height>100||s)||i&&null===n.offsetParent)s?(r.style.display="flex",r.style.top="10px",r.style.right="10px",r.style.bottom="auto",r.style.left="auto"):setTimeout((()=>{a||(r.style.display="none")}),300);else{r.style.display="flex";const e=10,t=10;r.style.top=`${e}px`,r.style.right=`${t}px`,r.style.bottom="auto",r.style.left="auto"}}),100);if(s(),!n.dataset.overlayEventListenersAdded){const e=()=>{s()},t=()=>{s()};window.addEventListener("scroll",e,{passive:!0}),window.addEventListener("resize",t,{passive:!0}),n.dataset.overlayEventListenersAdded="true"}new MutationObserver((e=>{e.forEach((e=>{"attributes"!==e.type||"src"!==e.attributeName&&"style"!==e.attributeName||(r.dataset.forImage=n.src,s())}))})).observe(n,{attributes:!0,attributeFilter:["src","style"]})}function m(e,n,o){const a=e.getAttribute("data-overlay-id");if(e.innerHTML="","error"===o)e.innerHTML=`\n            <div class="error-container">\n                <div class="close-x">×</div>\n                <p class="error">${n}</p>\n            </div>\n        `;else{const o=n.sageMakerAnalysis;if(o){const a=(100*o.probability).toFixed(1);let r,i;o.isFake,a<33?(r="#28a745",i="This content is likely real."):a<66?(r="#ffc107",i="This content is uncertain—proceed with caution."):(r="#dc3545",i="This content is likely a deepfake."),e.innerHTML=`\n                <div class="close-x">×</div>\n                <div class="analysis-title" style="\n                    color: ${r};\n                    font-weight: bold;\n                    text-align: center;\n                    margin-bottom: 20px;\n                    font-size: 16px;\n                ">${i}</div>\n\n                <div class="probability-circle">\n                    <svg width="150" height="150" viewBox="0 0 150 150">\n                        <circle\n                            cx="75"\n                            cy="75"\n                            r="70"\n                            stroke="#E6E6E6"\n                            stroke-width="10"\n                            fill="none"\n                        />\n                        <circle\n                            cx="75"\n                            cy="75"\n                            r="70"\n                            stroke="${r}"\n                            stroke-width="10"\n                            fill="none"\n                            stroke-linecap="round"\n                            stroke-dasharray="439.82"\n                            stroke-dashoffset="${439.82*(1-a/100)}"\n                            transform="rotate(-90 75 75)"\n                            style="transition: stroke-dashoffset 1s"\n                        />\n                    </svg>\n                    <div class="probability-text">\n                        <div class="probability-value" style="color: ${r}">${a}%</div>\n                        <div class="probability-label">Deepfake Probability</div>\n                    </div>\n                </div>\n\n                <div class="confidence-indicators">\n                    <div class="indicator real">\n                        <div class="indicator-dot"></div>\n                        <div class="indicator-label">Likely Real</div>\n                    </div>\n                    <div class="indicator uncertain">\n                        <div class="indicator-dot"></div>\n                        <div class="indicator-label" style="white-space: nowrap;">Uncertain</div>\n                    </div>\n                    <div class="indicator fake">\n                        <div class="indicator-dot"></div>\n                        <div class="indicator-label">Likely Deepfake</div>\n                    </div>\n                </div>\n\n                <div class="feedback-section" style="margin-top: 20px; text-align: center;">\n                    <p style="margin-bottom: 10px; color: #333;">Was this analysis helpful?</p>\n                    <div class="feedback-buttons">\n                        <button class="feedback-btn thumbs-up" data-image-hash="${n.imageHash}" data-value="up">\n                            <span>👍</span>\n                        </button>\n                        <button class="feedback-btn thumbs-down" data-image-hash="${n.imageHash}" data-value="down">\n                            <span>👎</span>\n                        </button>\n                    </div>\n                    <div class="feedback-comment" style="display: none;">\n                        <textarea \n                            placeholder="Tell us why (optional)" \n                            maxlength="500" \n                            style="\n                                width: calc(100% - 20px);\n                                max-width: 280px;\n                                margin: 10px auto;\n                                padding: 8px;\n                                border: 1px solid #ccc;\n                                border-radius: 4px;\n                                resize: vertical;\n                                min-height: 60px;\n                                max-height: 120px;\n                                font-family: inherit;\n                                font-size: 14px;\n                                color: #333;\n                                background-color: #fff;\n                                box-sizing: border-box;\n                            "\n                        ></textarea>\n                        <button class="submit-feedback-btn" style="\n                            margin-top: 10px;\n                            padding: 8px 16px;\n                            background-color: #4CAF50;\n                            color: white;\n                            border: none;\n                            border-radius: 4px;\n                            cursor: pointer;\n                            font-size: 14px;\n                            font-family: inherit;\n                        ">Submit Feedback</button>\n                    </div>\n                </div>\n            `;const s=document.createElement("style");s.textContent="\n                .close-x {\n                    position: absolute;\n                    top: 5px;\n                    right: 10px;\n                    cursor: pointer;\n                    font-size: 20px;\n                    color: #666;\n                    transition: color 0.2s;\n                }\n                .close-x:hover {\n                    color: #333;\n                }\n            ",document.head.appendChild(s);const c=e.querySelectorAll(".feedback-btn"),l=e.querySelector(".feedback-comment"),d=e.querySelector(".submit-feedback-btn");e.querySelector("textarea"),c.forEach((e=>{e.addEventListener("click",(()=>{c.forEach((e=>e.classList.remove("active"))),e.classList.add("active"),l.style.display="block"}))})),d.addEventListener("click",(async()=>{d.disabled=!0,d.innerHTML='\n            <span class="spinner"></span>\n            Sending...\n          ';const{authToken:n}=await chrome.storage.local.get(["authToken"]);if(console.log("Retrieved authToken:",n?"Token exists":"No token found"),!n)return console.error("No auth token found"),void(d.innerHTML="Error: Please log in");const o=t(n),a=o?.username||null;console.log("Final userId to be submitted:",a);const r=e.querySelectorAll(".feedback-btn"),i=e.querySelector(".feedback-comment"),s=r[0].dataset.imageHash,c=Array.from(r).find((e=>e.classList.contains("active")))?.getAttribute("data-value"),l=i?.value?.trim()||"";if(c){console.log("Submitting feedback with data:",{imageHash:s,feedbackType:c,comment:l,userId:a});try{chrome.runtime.sendMessage({action:"submitFeedback",feedbackData:{imageHash:s,feedbackType:c,comment:l,userId:a},origin:window.location.origin},(t=>{if(console.log("Feedback submission response:",t),t.success){const t=e.querySelector(".feedback-section");t.style.marginTop="0",t.innerHTML='\n                    <div class="feedback-success">\n                      <div class="icon-container">\n                        <svg class="status-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">\n                          <circle cx="26" cy="26" r="25" fill="none" stroke="#4CAF50" stroke-width="2"/>\n                          <path fill="none" stroke="#4CAF50" stroke-width="2" d="M14.1 27.2l7.1 7.2 16.7-16.8"/>\n                        </svg>\n                      </div>\n                      <h3 class="feedback-title">Thank you!</h3>\n                      <p class="feedback-message">Your feedback helps improve our analyses</p>\n                    </div>\n                  '}else if(t.alreadySubmitted){const t=e.querySelector(".feedback-section");t.style.marginTop="0",t.innerHTML='\n                    <div class="feedback-already-submitted">\n                      <div class="icon-container">\n                        <svg class="status-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">\n                          <circle cx="26" cy="26" r="25" fill="none" stroke="#3498db" stroke-width="2"/>\n                          <path fill="none" stroke="#3498db" stroke-width="2" d="M26 15v2m0 7v13"/>\n                        </svg>\n                      </div>\n                      <h3 class="feedback-title" style="color: #3498db;">Already Submitted</h3>\n                      <p class="feedback-message">You\'ve already provided feedback for this image</p>\n                    </div>\n                  '}else{d.disabled=!1,d.innerHTML="Submit Feedback";const e=document.createElement("p");e.className="feedback-error",e.textContent=`Error: ${t.error||"Failed to submit feedback"}`,d.parentNode.insertBefore(e,d.nextSibling)}}))}catch(e){console.error("Error in feedback submission:",e),d.disabled=!1,d.innerHTML="Submit Feedback";const t=document.createElement("p");t.className="feedback-error",t.textContent="Error: Failed to submit feedback",d.parentNode.insertBefore(t,d.nextSibling)}}else console.error("No feedback selected")})),console.log("Feedback buttons:",{feedbackBtns:e.querySelectorAll(".feedback-btn"),submitBtn:e.querySelector(".submit-feedback-btn"),feedbackComment:e.querySelector(".feedback-comment")})}else e.innerHTML='\n                <div class="error-container">\n                    <div class="close-x">×</div>\n                    <p class="error">No analysis results available</p>\n                </div>\n            '}e.setAttribute("data-overlay-id",a);const r=e.querySelector(".close-x");r&&r.addEventListener("click",(()=>{e.remove()}))}const p=e(l,500);function g(e){for(const t of e)if(("childList"===t.type||"attributes"===t.type)&&(t.addedNodes.length>0||"attributes"===t.type&&"src"===t.attributeName)){clearTimeout(y),y=setTimeout((()=>{l()}),v);break}}function f(){document.querySelectorAll("img:not([data-overlay-processed])").forEach(((e,t)=>d(e,t)))}async function b(){if(!chrome.runtime||!chrome.runtime.id)return;const t=window.location.hostname;i=t.includes("linkedin.com")?"linkedin":t.includes("facebook.com")?"facebook":t.includes("twitter.com")||t.includes("x.com")?"twitter":t.includes("instagram.com")?"instagram":t.includes("reddit.com")?"reddit":null,i&&(await c()?(a=!0,r=!0,async function(){await c()&&l()}(),n=new MutationObserver((e=>{e.forEach((e=>{"childList"===e.type&&e.addedNodes.forEach((e=>{e.nodeType===Node.ELEMENT_NODE&&e.querySelectorAll("img:not([data-overlay-processed])").forEach(((e,t)=>d(e,t)))}))}))})),n.observe(document.body,{childList:!0,subtree:!0}),setInterval(f,2e3),window.addEventListener("scroll",e((()=>{l()}),200)),o=new MutationObserver(g),o.observe(document.body,{childList:!0,subtree:!0})):(a=!1,r=!1,s(),n&&n.disconnect(),o&&o.disconnect(),window.removeEventListener("scroll",p)))}setInterval((function(){chrome.runtime.id||location.reload()}),6e4),chrome.runtime.onMessage.addListener(((e,t,n)=>{return"settingsChanged"===e.action&&((s=e.changes).enableOverlay&&(a=s.enableOverlay.newValue),b(),n({success:!0})),"updateSettings"===e.action&&(o=e.settings,a=!1!==o.enableOverlay,r=!1!==o[i],a&&r?(document.querySelectorAll(".image-overlay").forEach((e=>{e.style.display="flex"})),l()):document.querySelectorAll(".image-overlay").forEach((e=>{e.style.display="none"})),n({status:"Settings updated"})),!0;var o,s})),b();const h=document.createElement("style");let y;h.innerHTML="\n    .overlay:state(secondary-text-color) {\n      color: var(--secondary-text-color);\n    }\n    \n    .image-fill:state(webkit-fill-available) {\n      width: -webkit-fill-available;\n    }\n\n    .feedback-btn {\n      padding: 8px 16px;\n      margin: 0 5px;\n      background: none;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .feedback-btn:hover {\n      background-color: #f0f0f0;\n    }\n\n    .feedback-btn.active {\n      background-color: #e0e0e0;\n      border-color: #999;\n    }\n\n    .feedback-btn span {\n      font-size: 18px;\n    }\n\n    .spinner {\n      display: inline-block;\n      width: 12px;\n      height: 12px;\n      border: 2px solid #ffffff;\n      border-radius: 50%;\n      border-top-color: transparent;\n      animation: spin 1s linear infinite;\n      margin-right: 8px;\n    }\n\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n\n    .feedback-error {\n      color: #dc3545;\n      margin: 8px 0;\n      font-size: 14px;\n    }\n\n    .feedback-success,\n    .feedback-already-submitted {\n      text-align: center;\n      padding: 10px;\n    }\n\n    .icon-container {\n      margin: 0 auto;\n      width: 46px;\n      height: 46px;\n    }\n\n    .status-icon {\n      width: 100%;\n      height: 100%;\n    }\n\n    .feedback-title {\n      color: #4CAF50;\n      font-size: 1.2em;\n      margin: 10px 0 5px;\n    }\n\n    .feedback-message {\n      color: #666;\n      font-size: 0.9em;\n      margin: 5px 0;\n    }\n\n    .feedback-section p {\n      color: #333 !important;\n    }\n  ",document.head.appendChild(h);const v=300;window.addEventListener("error",(e=>{e.error}))})();
//# sourceMappingURL=social-content.js.map