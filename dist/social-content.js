(()=>{function e(e,t){let n;return function(...o){clearTimeout(n),n=setTimeout((()=>{clearTimeout(n),e(...o)}),t)}}console.log("Social content script loaded");let t,n,o=!1,r=!1,s=null;function a(){document.querySelectorAll(".image-overlay").forEach((e=>e.remove()))}async function i(){try{const e=await new Promise(((e,t)=>{chrome.storage.sync.get(["enableOverlay","facebook","twitter","instagram","linkedin","reddit"],(n=>{chrome.runtime.lastError?t(chrome.runtime.lastError):e(n)}))}));return o=!1!==e.enableOverlay,r=!1!==e[s],o&&r}catch(e){return console.error("Error in shouldProcessImage:",e),!1}}async function l(){if(!await i())return void a();const e=[];(function t(n){n.nodeType===Node.ELEMENT_NODE&&("img"!==n.tagName.toLowerCase()||n.dataset.overlayProcessed||e.push(n),n.shadowRoot&&t(n.shadowRoot),n.childNodes.forEach((e=>t(e))))})(document.body),"instagram"===s&&document.querySelectorAll('img[srcset], img[src*="instagram"]').forEach((t=>{t.dataset.overlayProcessed||e.push(t)})),"reddit"===s&&document.querySelectorAll('img[alt="Post image"]').forEach((t=>e.push(t))),e.forEach(((e,t)=>{if(e.width>50&&e.height>50||e.getAttribute("width")>50&&e.getAttribute("height")>50||e.classList.contains("media-lightbox-img"))try{e.complete&&e.naturalWidth>0?c(e):e.addEventListener("load",(()=>{c(e)}),{once:!0})}catch(e){console.error("Error processing image:",e)}else e.dataset.overlayProcessed="skipped"}))}function c(e,t){if("true"===e.dataset.overlayProcessed)return;const n=new IntersectionObserver((t=>{t.forEach((t=>{t.isIntersecting&&((e.width>100&&e.height>100||"video"===e.tagName.toLowerCase())&&d(e),n.unobserve(e))}))}),{threshold:.1});n.observe(e),e.dataset.overlayProcessed="true",e.onerror=function(){},e.onload=function(){(e.width>100&&e.height>100||"video"===e.tagName.toLowerCase())&&d(e)}}function d(t,n){let o=document.querySelector(`.image-overlay[data-for-image="${t.src}"]`);o||(o=document.createElement("div"),o.className="image-overlay",o.dataset.forImage=t.src,o.style.cssText="\n        position: absolute;\n        width: 30px;\n        height: 30px;\n        background-color: rgba(255, 255, 255, 0.4);\n        border-radius: 50%;\n        cursor: pointer;\n        z-index: 2147483647;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 20px;\n        pointer-events: auto;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        opacity: 0.5;\n        transition: opacity 0.3s ease, background-color 0.3s ease, display 0.3s ease;\n      ",o.textContent="ðŸ§¿",o.onclick=n=>{n.stopPropagation(),n.preventDefault();const r=function(e){if("instagram"===s){const t=document.createElement("canvas");t.width=e.naturalWidth,t.height=e.naturalHeight,t.getContext("2d").drawImage(e,0,0);try{return t.toDataURL("image/jpeg")}catch(t){return console.error("Failed to get image data:",t),e.src}}const t=e.src;let n=t;if("linkedin"===s){if(null!==e.closest(".feed-shared-celebration-image"))return t;try{const e=new URL(t),o=e.pathname;e.searchParams.delete("w"),e.searchParams.delete("h"),e.searchParams.set("w","1000"),e.searchParams.set("h","1000"),n=e.toString();const r=o.split(".").pop().toLowerCase();["jpg","jpeg","png","gif","webp"].includes(r)&&(n.toLowerCase().endsWith(`.${r}`)||(n+=`.${r}`))}catch(e){console.error("Failed to parse LinkedIn image URL:",e),n=t}}else if("instagram"===s&&t.includes("&_nc_ht="))try{const e=new URL(t);e.searchParams.delete("_nc_sid"),e.searchParams.delete("_nc_ohc"),e.searchParams.delete("_nc_ht"),e.searchParams.delete("edm"),e.searchParams.delete("oh"),e.searchParams.delete("oe"),n=e.toString()}catch(e){console.error("Failed to parse Instagram image URL:",e)}return n}(t);r?function(t,n){u("Showing consent popup for target:",t);const o=document.querySelector(`.consent-popup[data-for-image="${n}"]`);if(o)return o;document.querySelectorAll(".consent-popup:not([data-for-image='"+n+"'])").forEach((e=>e.remove()));const r=document.createElement("div");r.className="consent-popup",r.setAttribute("data-for-image",n),r.innerHTML='\n      <p class="consent-message">Send Image for Analysis?</p>\n      <div class="consent-buttons">\n        <button class="confirm-btn">Analyze Image</button>\n        <button class="cancel-btn">Cancel</button>\n      </div>\n      <div class="consent-options">\n        <label class="store-data-option">\n          <input type="checkbox" class="store-data-checkbox" id="storeImageData" checked>\n          <span>Allow storing image data for research and model improvement</span>\n        </label>\n      </div>\n    ',document.body.appendChild(r);const s=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting?(r.style.display="flex",a()):r.style.display="none"}))}),{threshold:.1});s.observe(t);const a=()=>{if("none"===r.style.display)return;const e=t.getBoundingClientRect();u("Overlay rect:",e);let n=e.right+window.pageXOffset+10,o=e.top+window.pageYOffset;n+r.offsetWidth>window.innerWidth-10+window.pageXOffset&&(n=e.left+window.pageXOffset-r.offsetWidth-10);const s=window.innerHeight+window.pageYOffset-r.offsetHeight-10;o=Math.max(10+window.pageYOffset,Math.min(o,s)),u("Setting popup position:",{left:n,top:o}),r.style.position="absolute",r.style.left=`${n}px`,r.style.top=`${o}px`};setTimeout(a,0);const i=e(a,100);window.addEventListener("resize",i),window.addEventListener("scroll",i),r.querySelector(".confirm-btn")?.addEventListener("click",(async e=>{e.preventDefault();const t=r.querySelector("#storeImageData"),o=!!t&&t.checked;r.innerHTML='<div class="loading-indicator">Analyzing...</div>',await function(e,t,n){let o=e.split("/").pop().split("?")[0],r="image/jpeg";if(e.includes("twimg.com")){const t=new URL(e).searchParams.get("format");t&&(o+=`.${t}`,r=`image/${t}`)}else r=function(e){return{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",gif:"image/gif",webp:"image/webp"}[e.split(".").pop().toLowerCase()]||"application/octet-stream"}(o);console.log(`Sending image for analysis: ${o}`),console.log(`MIME type: ${r}`),console.log(`Image URL: ${e}`),console.log(`Store image data: ${n}`),fetch(e).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.arrayBuffer()})).then((e=>{const t=new Uint8Array(e);return crypto.subtle.digest("SHA-256",t).then((e=>{const n=Array.from(new Uint8Array(e)).map((e=>e.toString(16).padStart(2,"0"))).join("");return{uint8Array:t,hashHex:n}}))})).then((({uint8Array:s,hashHex:a})=>{chrome.runtime.sendMessage({action:"sendImage",imageData:{url:e,mimeType:r,filename:o,size:s.length,sha256Hash:a,origin:window.location.origin,storeData:n}},(e=>{chrome.runtime.lastError?(console.error("Error sending message:",chrome.runtime.lastError),g(t,"Error: "+chrome.runtime.lastError.message,"error")):"Authentication required"===e.error?g(t,"Authentication required. Please log in and try again.","error"):(console.log("Server response:",e),g(t,e,"success"))}))})).catch((e=>{console.error("Error:",e),g(t,"Error: "+e.message,"error")}))}(n,r,o)})),r.querySelector(".cancel-btn")?.addEventListener("click",(()=>{u("Cleaning up popup"),window.removeEventListener("resize",i),window.removeEventListener("scroll",i),s.disconnect(),r.remove()}))}(o,r):function(){const e=document.createElement("div");e.textContent="No suitable image found.",e.style.position="fixed",e.style.bottom="20px",e.style.right="20px",e.style.padding="10px 20px",e.style.borderRadius="5px",e.style.color="#fff",e.style.zIndex="10000",e.style.boxShadow="0 2px 8px rgba(0, 0, 0, 0.2)",e.style.opacity="0",e.style.transition="opacity 0.5s ease-in-out",e.style.backgroundColor="#f44336",document.body.appendChild(e),e.offsetWidth,e.style.opacity="1",setTimeout((()=>{e.style.opacity="0",e.addEventListener("transitionend",(()=>{e.remove()}))}),3e3)}()},t.parentElement.appendChild(o),o.addEventListener("mouseenter",(()=>{o.style.opacity="1",o.style.backgroundColor="rgba(255, 255, 255, 0.8)"})),o.addEventListener("mouseleave",(()=>{o.style.opacity="0.5",o.style.backgroundColor="rgba(255, 255, 255, 0.4)"})));const r=e((()=>{const e=t.getBoundingClientRect(),n=window.innerHeight,r=window.innerWidth,s=e.top<n&&e.bottom>0&&e.left<r&&e.right>0,a=null!==t.closest(".media-lightbox-img"),i="video"===t.tagName.toLowerCase()||t.querySelector("video");if(!s||!(e.width>100&&e.height>100||i)||a&&null===t.offsetParent)i?(o.style.display="flex",o.style.top="10px",o.style.right="10px",o.style.bottom="auto",o.style.left="auto"):setTimeout((()=>{s||(o.style.display="none")}),300);else{o.style.display="flex";const e=10,t=10;o.style.top=`${e}px`,o.style.right=`${t}px`,o.style.bottom="auto",o.style.left="auto"}}),100);if(r(),!t.dataset.overlayEventListenersAdded){const e=()=>{r()},n=()=>{r()};window.addEventListener("scroll",e,{passive:!0}),window.addEventListener("resize",n,{passive:!0}),t.dataset.overlayEventListenersAdded="true"}new MutationObserver((e=>{e.forEach((e=>{"attributes"!==e.type||"src"!==e.attributeName&&"style"!==e.attributeName||(o.dataset.forImage=t.src,r())}))})).observe(t,{attributes:!0,attributeFilter:["src","style"]})}function u(e,...t){console.log(`[RealEyes Debug] ${e}`,...t)}function g(e,t,n){if(e.innerHTML="","error"===n)e.innerHTML=`\n        <div class="error-container">\n          <p class="error">${t}</p>\n          <button class="close-btn">Close</button>\n        </div>\n      `;else{const n=t.sageMakerAnalysis;if(console.log("Analysis results:",n),n){const t=(100*n.probability).toFixed(1),o=n.isFake;let r;r=t<33?"#28a745":t<66?"#ffc107":"#dc3545",e.innerHTML=`\n          <div id="predictionResults">\n            <div style="\n              font-size: 18px; \n              color: ${r}; \n              font-weight: 500; \n              margin-bottom: 10px;\n              text-align: center; \n            ">\n              ${o?"Likely AI Generated":"Likely Real"}\n            </div>\n\n            <div class="probability-circle">\n              <svg width="150" height="150" viewBox="0 0 150 150">\n                <circle\n                  cx="75"\n                  cy="75"\n                  r="70"\n                  stroke="#E6E6E6"\n                  stroke-width="10"\n                  fill="none"\n                />\n                <circle\n                  cx="75"\n                  cy="75"\n                  r="70"\n                  stroke="${r}"\n                  stroke-width="10"\n                  fill="none"\n                  stroke-linecap="round"\n                  stroke-dasharray="439.82"\n                  stroke-dashoffset="${439.82*(1-t/100)}"\n                  transform="rotate(-90 75 75)"\n                  style="transition: stroke-dashoffset 1s"\n                />\n              </svg>\n              <div class="probability-text">\n                <div class="probability-value" style="color: ${r}">${t}%</div>\n                <div class="probability-label">Deepfake Probability</div>\n              </div>\n            </div>\n\n            <div class="confidence-indicators">\n              <div class="indicator real">\n                <div class="indicator-dot"></div>\n                <div class="indicator-label">Likely Real</div>\n              </div>\n              <div class="indicator uncertain">\n                <div class="indicator-dot"></div>\n                <div class="indicator-label">Uncertain</div>\n              </div>\n              <div class="indicator fake">\n                <div class="indicator-dot"></div>\n                <div class="indicator-label">Likely Fake</div>\n              </div>\n            </div>\n\n            <div style="\n              width: 100%;\n              text-align: center; \n              margin-top: 20px;\n            ">\n              <button class="close-btn">Close</button>\n            </div>\n          </div>\n        `}else e.innerHTML='\n          <div class="error-container">\n            <p class="error">No analysis results available</p>\n            <button class="close-btn">Close</button>\n          </div>\n        '}const o=e.querySelector(".close-btn");o&&o.addEventListener("click",(()=>{e.remove()}))}const m=e(l,500);function p(e){for(const t of e)if(("childList"===t.type||"attributes"===t.type)&&(t.addedNodes.length>0||"attributes"===t.type&&"src"===t.attributeName)){clearTimeout(v),v=setTimeout((()=>{l()}),b);break}}function y(){document.querySelectorAll("img:not([data-overlay-processed])").forEach(((e,t)=>c(e)))}async function h(){if(!chrome.runtime||!chrome.runtime.id)return;const d=window.location.hostname;s=d.includes("linkedin.com")?"linkedin":d.includes("facebook.com")?"facebook":d.includes("twitter.com")||d.includes("x.com")?"twitter":d.includes("instagram.com")?"instagram":d.includes("reddit.com")?"reddit":null,s&&(await i()?(o=!0,r=!0,async function(){await i()&&l()}(),t=new MutationObserver((e=>{e.forEach((e=>{"childList"===e.type&&e.addedNodes.forEach((e=>{e.nodeType===Node.ELEMENT_NODE&&e.querySelectorAll("img:not([data-overlay-processed])").forEach(((e,t)=>c(e)))}))}))})),t.observe(document.body,{childList:!0,subtree:!0}),setInterval(y,2e3),window.addEventListener("scroll",e((()=>{l()}),200)),n=new MutationObserver(p),n.observe(document.body,{childList:!0,subtree:!0})):(o=!1,r=!1,a(),t&&t.disconnect(),n&&n.disconnect(),window.removeEventListener("scroll",m)))}setInterval((function(){chrome.runtime.id||location.reload()}),6e4),chrome.runtime.onMessage.addListener(((e,t,n)=>{return console.log("Message received in social content script:",e),"settingsChanged"===e.action&&(console.log("Settings changed:",e.changes),i=e.changes,console.log("Updating settings in content script:",i),i.enableOverlay&&(o=i.enableOverlay.newValue),h(),n({success:!0})),"updateSettings"===e.action&&(a=e.settings,o=!1!==a.enableOverlay,r=!1!==a[s],o&&r?(document.querySelectorAll(".image-overlay").forEach((e=>{e.style.display="flex"})),l()):document.querySelectorAll(".image-overlay").forEach((e=>{e.style.display="none"})),n({status:"Settings updated"})),!0;var a,i})),h();const f=document.createElement("style");let v;f.innerHTML="\n    .overlay:state(secondary-text-color) {\n      color: var(--secondary-text-color);\n    }\n    \n    .image-fill:state(webkit-fill-available) {\n      width: -webkit-fill-available;\n    }\n  ",document.head.appendChild(f);const b=300;window.addEventListener("error",(e=>{var t;t=e.error,console.error("RealEyes.ai Extension Error:",t)}))})();
//# sourceMappingURL=social-content.js.map