(()=>{function e(e,n){let t;return function(...o){clearTimeout(t),t=setTimeout((()=>{clearTimeout(t),e(...o)}),n)}}function n(e){try{const n=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),t=decodeURIComponent(atob(n).split("").map((e=>"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2))).join("")),o=JSON.parse(t);return console.log("Decoded JWT payload:",o),console.log("Extracted userId:",o.username),o}catch(e){return console.error("Error decoding JWT:",e),null}}let t,o,a=!1,r=!1,i=null;function s(){document.querySelectorAll(".image-overlay").forEach((e=>e.remove()))}async function c(){try{const e=await new Promise(((e,n)=>{chrome.storage.sync.get(["enableOverlay","facebook","twitter","instagram","linkedin","reddit"],(t=>{chrome.runtime.lastError?n(chrome.runtime.lastError):e(t)}))}));return a=!1!==e.enableOverlay,r=!1!==e[i],a&&r}catch(e){return console.error("Error in shouldProcessImage:",e),!1}}async function l(){if(!await c())return void s();const e=[];(function n(t){t.nodeType===Node.ELEMENT_NODE&&("img"!==t.tagName.toLowerCase()||t.dataset.overlayProcessed||e.push(t),t.shadowRoot&&n(t.shadowRoot),t.childNodes.forEach((e=>n(e))))})(document.body),"instagram"===i&&document.querySelectorAll('img[srcset], img[src*="instagram"]').forEach((n=>{n.dataset.overlayProcessed||e.push(n)})),"reddit"===i&&document.querySelectorAll('img[alt="Post image"]').forEach((n=>e.push(n))),e.forEach(((e,n)=>{if(e.width>50&&e.height>50||e.getAttribute("width")>50&&e.getAttribute("height")>50||e.classList.contains("media-lightbox-img"))try{e.complete&&e.naturalWidth>0?d(e,n):e.addEventListener("load",(()=>{d(e,n)}),{once:!0})}catch(e){console.error("Error processing image:",e)}else e.dataset.overlayProcessed="skipped"}))}function d(e,n){if("true"===e.dataset.overlayProcessed)return;const t=new IntersectionObserver((o=>{o.forEach((o=>{o.isIntersecting&&((e.width>100&&e.height>100||"video"===e.tagName.toLowerCase())&&p(e,n),t.unobserve(e))}))}),{threshold:.1});t.observe(e),e.dataset.overlayProcessed="true",e.onerror=function(){},e.onload=function(){(e.width>100&&e.height>100||"video"===e.tagName.toLowerCase())&&p(e,n)}}function p(t,o){const a=`overlay-${o}-${Date.now()}`;let r=document.querySelector(`.image-overlay[data-for-image="${t.src}"]`);if(!r){r=document.createElement("div"),r.className="image-overlay",r.dataset.forImage=t.src,r.dataset.overlayId=a;const o=document.createElement("img");o.src=chrome.runtime.getURL("icons/realeyes-ai-icon.png"),o.style.cssText=`\n        width: 20px;\n        height: 20px;\n        object-fit: contain;\n        ${"reddit"===i?"margin-top: 16px;":""}\n      `,r.style.cssText="\n            position: absolute;\n            width: 30px;\n            height: 30px;\n            background-color: rgba(255, 255, 255, 0.4);\n            border-radius: 50%;\n            cursor: pointer;\n            z-index: 2147483647;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 20px;\n            pointer-events: auto;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n            opacity: 0.5;\n            transition: opacity 0.3s ease, background-color 0.3s ease, display 0.3s ease;\n        ",r.appendChild(o),r.onclick=o=>{o.stopPropagation(),o.preventDefault();let s=document.querySelector(`.consent-popup[data-for-image="${t.src}"]`);if(s||(s=document.querySelector(`.consent-popup[data-overlay-id="${a}"]`)),s)return void s.remove();const c=function(e){if("instagram"===i){const n=document.createElement("canvas");n.width=e.naturalWidth,n.height=e.naturalHeight,n.getContext("2d").drawImage(e,0,0);try{return n.toDataURL("image/jpeg")}catch(n){return console.error("Failed to get image data:",n),e.src}}const n=e.src;let t=n;if("linkedin"===i){if(null!==e.closest(".feed-shared-celebration-image"))return n;try{const e=new URL(n),o=e.pathname;e.searchParams.delete("w"),e.searchParams.delete("h"),e.searchParams.set("w","1000"),e.searchParams.set("h","1000"),t=e.toString();const a=o.split(".").pop().toLowerCase();["jpg","jpeg","png","gif","webp"].includes(a)&&(t.toLowerCase().endsWith(`.${a}`)||(t+=`.${a}`))}catch(e){console.error("Failed to parse LinkedIn image URL:",e),t=n}}else if("instagram"===i&&n.includes("&_nc_ht="))try{const e=new URL(n);e.searchParams.delete("_nc_sid"),e.searchParams.delete("_nc_ohc"),e.searchParams.delete("_nc_ht"),e.searchParams.delete("edm"),e.searchParams.delete("oh"),e.searchParams.delete("oe"),t=e.toString()}catch(e){console.error("Failed to parse Instagram image URL:",e)}return t}(t);c?function(t,o,a){let r=document.querySelector(`.consent-popup[data-for-image="${o}"]`);if(r||(r=document.querySelector(`.consent-popup[data-overlay-id="${a}"]`)),r)return r;document.querySelectorAll(".consent-popup").forEach((e=>e.remove()));const i=document.createElement("div");i.className="consent-popup",i.setAttribute("data-for-image",o),i.setAttribute("data-overlay-id",a),i.innerHTML='\n        <p class="consent-message">Analyze this image?</p>\n        <div class="consent-buttons">\n            <button class="confirm-btn">Analyze Now</button>\n            <button class="cancel-btn">Skip</button>\n        </div>\n        <div class="consent-options">\n            <label class="store-data-option">\n                <input type="checkbox" class="store-data-checkbox" id="storeImageData" checked>\n                <span>Help us improve detection by storing this image</span>\n            </label>\n        </div>\n    ',document.body.appendChild(i);const s=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting?(i.style.display="flex",c()):i.style.display="none"}))}),{threshold:.1});s.observe(t);const c=()=>{if("none"===i.style.display)return;const e=t.getBoundingClientRect();let n=e.right+window.pageXOffset+10,o=e.top+window.pageYOffset;n+i.offsetWidth>window.innerWidth-10+window.pageXOffset&&(n=e.left+window.pageXOffset-i.offsetWidth-10);const a=window.innerHeight+window.pageYOffset-i.offsetHeight-10;o=Math.max(10+window.pageYOffset,Math.min(o,a)),i.style.position="absolute",i.style.left=`${n}px`,i.style.top=`${o}px`};setTimeout(c,0);const l=e(c,100);window.addEventListener("resize",l),window.addEventListener("scroll",l),i.querySelector(".confirm-btn")?.addEventListener("click",(async e=>{e.preventDefault();const t=i.querySelector("#storeImageData"),a=!!t&&t.checked;i.innerHTML='<div class="loading-indicator">Analyzing...</div>',await function(e,t,o){let a=e.split("/").pop().split("?")[0],r="image/jpeg";chrome.storage.local.get(["authToken"],(async function(i){const s=i.authToken;if(!s)return void u(t,"Authentication required. Please log in and try again.","error");const c=n(s),l=c?.username||null;if(e.includes("twimg.com")){const n=new URL(e).searchParams.get("format");n&&(a+=`.${n}`,r=`image/${n}`)}else r=function(e){return{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",gif:"image/gif",webp:"image/webp"}[e.split(".").pop().toLowerCase()]||"application/octet-stream"}(a);fetch(e).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.arrayBuffer()})).then((e=>{const n=new Uint8Array(e);return crypto.subtle.digest("SHA-256",n).then((e=>{const t=Array.from(new Uint8Array(e)).map((e=>e.toString(16).padStart(2,"0"))).join("");return{uint8Array:n,hashHex:t}}))})).then((({uint8Array:n,hashHex:i})=>{chrome.runtime.sendMessage({action:"sendImage",imageData:{url:e,mimeType:r,filename:a,size:n.length,sha256Hash:i,origin:window.location.origin,storeData:o,userId:l}},(e=>{chrome.runtime.lastError?u(t,"Error: "+chrome.runtime.lastError.message,"error"):"Authentication required"===e.error?u(t,"Authentication required. Please log in and try again.","error"):u(t,e,"success")}))})).catch((e=>{console.error("Error:",e),u(t,"Error: "+e.message,"error")}))}))}(o,i,a)})),i.querySelector(".cancel-btn")?.addEventListener("click",(()=>{window.removeEventListener("resize",l),window.removeEventListener("scroll",l),s.disconnect(),i.remove()}))}(r,c,a):function(){const e=document.createElement("div");e.textContent="No suitable image found.",e.style.position="fixed",e.style.bottom="20px",e.style.right="20px",e.style.padding="10px 20px",e.style.borderRadius="5px",e.style.color="#fff",e.style.zIndex="10000",e.style.boxShadow="0 2px 8px rgba(0, 0, 0, 0.2)",e.style.opacity="0",e.style.transition="opacity 0.5s ease-in-out",e.style.backgroundColor="#f44336",document.body.appendChild(e),e.offsetWidth,e.style.opacity="1",setTimeout((()=>{e.style.opacity="0",e.addEventListener("transitionend",(()=>{e.remove()}))}),3e3)}()},t.parentElement.appendChild(r),r.addEventListener("mouseenter",(()=>{r.style.opacity="1",r.style.backgroundColor="rgba(255, 255, 255, 0.8)"})),r.addEventListener("mouseleave",(()=>{r.style.opacity="0.5",r.style.backgroundColor="rgba(255, 255, 255, 0.4)"}))}const s=e((()=>{const e=t.getBoundingClientRect(),n=window.innerHeight,o=window.innerWidth,a=e.top<n&&e.bottom>0&&e.left<o&&e.right>0,i=null!==t.closest(".media-lightbox-img"),s="video"===t.tagName.toLowerCase()||t.querySelector("video");if(!a||!(e.width>100&&e.height>100||s)||i&&null===t.offsetParent)s?(r.style.display="flex",r.style.top="10px",r.style.right="10px",r.style.bottom="auto",r.style.left="auto"):setTimeout((()=>{a||(r.style.display="none")}),300);else{r.style.display="flex";const e=10,n=10;r.style.top=`${e}px`,r.style.right=`${n}px`,r.style.bottom="auto",r.style.left="auto"}}),100);if(s(),!t.dataset.overlayEventListenersAdded){const e=()=>{s()},n=()=>{s()};window.addEventListener("scroll",e,{passive:!0}),window.addEventListener("resize",n,{passive:!0}),t.dataset.overlayEventListenersAdded="true"}new MutationObserver((e=>{e.forEach((e=>{"attributes"!==e.type||"src"!==e.attributeName&&"style"!==e.attributeName||(r.dataset.forImage=t.src,s())}))})).observe(t,{attributes:!0,attributeFilter:["src","style"]})}function u(e,t,o){const a=e.getAttribute("data-overlay-id");if(e.innerHTML="","error"===o)e.innerHTML=`\n            <div class="error-container">\n                <div class="close-x">×</div>\n                <p class="error">${t}</p>\n            </div>\n        `;else{const o=t.sageMakerAnalysis,a=t.sageMakerAnalysisUFD,r=o.probability>a.probability?o:a,i=o.probability>a.probability?"DMImageDetection Model":"UniversalFakeDetect Model";if(r){const s=(100*r.probability).toFixed(1);let c,l;s<33?(c="#28a745",l="This content is likely real."):s<66?(c="#ffc107",l="This content is uncertain—proceed with caution."):(c="#dc3545",l="This content is likely a deepfake."),e.innerHTML=`\n                <div class="close-x">×</div>\n                <div class="analysis-title" style="\n                    color: ${c};\n                    font-weight: bold;\n                    text-align: center;\n                    margin-bottom: 20px;\n                    font-size: 16px;\n                ">${l}</div>\n\n                <div class="probability-circle">\n                    <svg width="150" height="150" viewBox="0 0 150 150">\n                        <circle\n                            cx="75"\n                            cy="75"\n                            r="70"\n                            stroke="#E6E6E6"\n                            stroke-width="10"\n                            fill="none"\n                        />\n                        <circle\n                            cx="75"\n                            cy="75"\n                            r="70"\n                            stroke="${c}"\n                            stroke-width="10"\n                            fill="none"\n                            stroke-linecap="round"\n                            stroke-dasharray="439.82"\n                            stroke-dashoffset="${439.82*(1-s/100)}"\n                            transform="rotate(-90 75 75)"\n                            style="transition: stroke-dashoffset 1s"\n                        />\n                    </svg>\n                    <div class="probability-text">\n                        <div class="probability-value" style="color: ${c}">${s}%</div>\n                        <div class="probability-label">Deepfake Probability</div>\n                    </div>\n                </div>\n\n                <div class="confidence-indicators">\n                    <div class="indicator real">\n                        <div class="indicator-dot"></div>\n                        <div class="indicator-label">Likely Real</div>\n                    </div>\n                    <div class="indicator uncertain">\n                        <div class="indicator-dot"></div>\n                        <div class="indicator-label" style="white-space: nowrap;">Uncertain</div>\n                    </div>\n                    <div class="indicator fake">\n                        <div class="indicator-dot"></div>\n                        <div class="indicator-label">Likely Deepfake</div>\n                    </div>\n                </div>\n\n                <div class="analysis-details-accordion">\n                    <button class="accordion-button">\n                        <span>View Analysis Details</span>\n                    </button>\n                    \n                    <div class="accordion-content">\n                        <div class="details-section">\n                            <h4 style="margin: 5px 0; color: #495057;">Model Details</h4>\n                            <p><strong>Selected Model:</strong> ${i}</p>\n                            <p><strong>Logit Value:</strong> ${r.logit.toFixed(4)}</p>\n                            <p><strong>Raw Probability:</strong> ${r.probability.toFixed(6)}</p>\n                            \n                            <h4 style="margin: 10px 0 5px; color: #495057;">Image Information</h4>\n                            <p><strong>File Name:</strong> ${t.originalFileName}</p>\n                            <p><strong>File Size:</strong> ${(t.fileSize/1024).toFixed(2)} KB</p>\n                            <p><strong>Dimensions:</strong> ${t.metadata.sharp.width}x${t.metadata.sharp.height}</p>\n                            <p><strong>Format:</strong> ${t.metadata.sharp.format.toUpperCase()}</p>\n                            \n                            <h4 style="margin: 10px 0 5px; color: #495057;">Analysis Comparison</h4>\n                            <p><strong>DMImageDetection Model:</strong> ${(100*o.probability).toFixed(1)}% probability</p>\n                            <p><strong>UniversalFakeDetect Model:</strong> ${(100*a.probability).toFixed(1)}% probability</p>\n                            \n                            <h4 style="margin: 10px 0 5px; color: #495057;">Technical Details</h4>\n                            <p><strong>Image Hash:</strong> ${t.imageHash}</p>\n                            <p><strong>Perceptual Hash:</strong> ${t.pHash}</p>\n                            <p><strong>Upload Date:</strong> ${new Date(t.uploadDate).toLocaleString()}</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="feedback-section" style="margin-top: 20px; text-align: center;">\n                    <p style="margin-bottom: 10px; color: #333;">Was this analysis helpful?</p>\n                    <div class="feedback-buttons">\n                        <button class="feedback-btn thumbs-up" data-image-hash="${t.imageHash}" data-value="up">\n                            <span>👍</span>\n                        </button>\n                        <button class="feedback-btn thumbs-down" data-image-hash="${t.imageHash}" data-value="down">\n                            <span>👎</span>\n                        </button>\n                    </div>\n                    <div class="feedback-comment" style="display: none;">\n                        <div class="textarea-container">\n                            <textarea \n                                placeholder="Tell us why (optional)" \n                                maxlength="100" \n                                style="\n                                    width: calc(100% - 20px);\n                                    max-width: 280px;\n                                    margin: 10px auto;\n                                    padding: 8px;\n                                    padding-bottom: 25px;\n                                    border: 1px solid #ccc;\n                                    border-radius: 4px;\n                                    resize: none;\n                                    min-height: 60px;\n                                    max-height: 120px;\n                                    font-family: inherit;\n                                    font-size: 14px;\n                                    color: #333;\n                                    background-color: #fff;\n                                    box-sizing: border-box;\n                                "\n                            ></textarea>\n                            <div class="char-counter">0/100 characters</div>\n                        </div>\n                        <button class="submit-feedback-btn" style="\n                            margin-top: 5px;\n                            padding: 8px 16px;\n                            background-color: #4CAF50;\n                            color: white;\n                            border: none;\n                            border-radius: 4px;\n                            cursor: pointer;\n                            font-size: 14px;\n                            font-family: inherit;\n                        ">Submit Feedback</button>\n                    </div>\n                </div>\n            `;const d=document.createElement("style");d.textContent="\n                .close-x {\n                    position: absolute;\n                    top: 5px;\n                    right: 10px;\n                    cursor: pointer;\n                    font-size: 20px;\n                    color: #666;\n                    transition: color 0.2s;\n                }\n                .close-x:hover {\n                    color: #333;\n                }\n            ",document.head.appendChild(d);const p=e.querySelectorAll(".feedback-btn"),u=e.querySelector(".feedback-comment"),m=e.querySelector(".submit-feedback-btn"),g=e.querySelector("textarea"),b=e.querySelector(".char-counter");p.forEach((e=>{e.addEventListener("click",(()=>{p.forEach((e=>e.classList.remove("active"))),e.classList.add("active"),u.style.display="block"}))})),g.addEventListener("input",(()=>{const e=g.value.length;b.textContent=`${e}/100 characters`,b.classList.remove("near-limit","at-limit"),e>=90?b.classList.add("at-limit"):e>=75&&b.classList.add("near-limit")})),m.addEventListener("click",(async()=>{m.disabled=!0,m.innerHTML='\n            <span class="spinner"></span>\n            Sending...\n          ';const{authToken:t}=await chrome.storage.local.get(["authToken"]);if(console.log("Retrieved authToken:",t?"Token exists":"No token found"),!t)return console.error("No auth token found"),void(m.innerHTML="Error: Please log in");const o=n(t),a=o?.username||null;console.log("Final userId to be submitted:",a);const r=e.querySelectorAll(".feedback-btn"),i=e.querySelector("textarea"),s=r[0].dataset.imageHash,c=Array.from(r).find((e=>e.classList.contains("active")))?.getAttribute("data-value"),l=i?.value?.trim()||"";if(c){console.log("Submitting feedback with data:",{imageHash:s,feedbackType:c,comment:l,userId:a});try{chrome.runtime.sendMessage({action:"submitFeedback",feedbackData:{imageHash:s,feedbackType:c,comment:l,userId:a},origin:window.location.origin},(n=>{if(console.log("Feedback submission response:",n),n.success){const n=e.querySelector(".feedback-section");n.style.marginTop="0",n.innerHTML='\n                    <div class="feedback-success">\n                      <div class="icon-container">\n                        <svg class="status-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">\n                          <circle cx="26" cy="26" r="25" fill="none" stroke="#4CAF50" stroke-width="2"/>\n                          <path fill="none" stroke="#4CAF50" stroke-width="2" d="M14.1 27.2l7.1 7.2 16.7-16.8"/>\n                        </svg>\n                      </div>\n                      <h3 class="feedback-title">Thank you!</h3>\n                      <p class="feedback-message">Your feedback helps improve our analyses</p>\n                    </div>\n                  '}else if(n.alreadySubmitted){const n=e.querySelector(".feedback-section");n.style.marginTop="0",n.innerHTML='\n                    <div class="feedback-already-submitted">\n                      <div class="icon-container">\n                        <svg class="status-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">\n                          <circle cx="26" cy="26" r="25" fill="none" stroke="#3498db" stroke-width="2"/>\n                          <path fill="none" stroke="#3498db" stroke-width="2" d="M26 15v2m0 7v13"/>\n                        </svg>\n                      </div>\n                      <h3 class="feedback-title" style="color: #3498db;">Already Submitted</h3>\n                      <p class="feedback-message">You\'ve already provided feedback for this image</p>\n                    </div>\n                  '}else{m.disabled=!1,m.innerHTML="Submit Feedback";const e=document.createElement("p");e.className="feedback-error",e.textContent=`Error: ${n.error||"Failed to submit feedback"}`,m.parentNode.insertBefore(e,m.nextSibling)}}))}catch(e){console.error("Error in feedback submission:",e),m.disabled=!1,m.innerHTML="Submit Feedback";const n=document.createElement("p");n.className="feedback-error",n.textContent="Error: Failed to submit feedback",m.parentNode.insertBefore(n,m.nextSibling)}}else console.error("No feedback selected")})),console.log("Feedback buttons:",{feedbackBtns:e.querySelectorAll(".feedback-btn"),submitBtn:e.querySelector(".submit-feedback-btn"),feedbackComment:e.querySelector("textarea")}),g.addEventListener("input",(()=>{const e=g.value.length;b.textContent=`${e}/100 characters`,b.classList.remove("near-limit","at-limit"),e>=90?b.classList.add("at-limit"):e>=75&&b.classList.add("near-limit")}));const h=e.querySelector(".accordion-button"),f=e.querySelector(".accordion-content");h.addEventListener("click",(()=>{const e="block"===f.style.display;f.style.display=e?"none":"block"}))}else e.innerHTML='\n                <div class="error-container">\n                    <div class="close-x">×</div>\n                    <p class="error">No analysis results available</p>\n                </div>\n            '}e.setAttribute("data-overlay-id",a);const r=e.querySelector(".close-x");r&&r.addEventListener("click",(()=>{e.remove()}))}const m=e(l,500);function g(e){for(const n of e)if(("childList"===n.type||"attributes"===n.type)&&(n.addedNodes.length>0||"attributes"===n.type&&"src"===n.attributeName)){clearTimeout(y),y=setTimeout((()=>{l()}),v);break}}function b(){document.querySelectorAll("img:not([data-overlay-processed])").forEach(((e,n)=>d(e,n)))}async function h(){if(!chrome.runtime||!chrome.runtime.id)return;const n=window.location.hostname;i=n.includes("linkedin.com")?"linkedin":n.includes("facebook.com")?"facebook":n.includes("twitter.com")||n.includes("x.com")?"twitter":n.includes("instagram.com")?"instagram":n.includes("reddit.com")?"reddit":null,i&&(await c()?(a=!0,r=!0,async function(){await c()&&l()}(),t=new MutationObserver((e=>{e.forEach((e=>{"childList"===e.type&&e.addedNodes.forEach((e=>{e.nodeType===Node.ELEMENT_NODE&&e.querySelectorAll("img:not([data-overlay-processed])").forEach(((e,n)=>d(e,n)))}))}))})),t.observe(document.body,{childList:!0,subtree:!0}),setInterval(b,2e3),window.addEventListener("scroll",e((()=>{l()}),200)),o=new MutationObserver(g),o.observe(document.body,{childList:!0,subtree:!0})):(a=!1,r=!1,s(),t&&t.disconnect(),o&&o.disconnect(),window.removeEventListener("scroll",m)))}setInterval((function(){chrome.runtime.id||location.reload()}),6e4),chrome.runtime.onMessage.addListener(((e,n,t)=>{return"settingsChanged"===e.action&&((s=e.changes).enableOverlay&&(a=s.enableOverlay.newValue),h(),t({success:!0})),"updateSettings"===e.action&&(o=e.settings,a=!1!==o.enableOverlay,r=!1!==o[i],a&&r?(document.querySelectorAll(".image-overlay").forEach((e=>{e.style.display="flex"})),l()):document.querySelectorAll(".image-overlay").forEach((e=>{e.style.display="none"})),t({status:"Settings updated"})),!0;var o,s})),h();const f=document.createElement("style");let y;f.innerHTML='\n    .overlay:state(secondary-text-color) {\n      color: var(--secondary-text-color);\n    }\n    \n    .image-fill:state(webkit-fill-available) {\n      width: -webkit-fill-available;\n    }\n\n    .feedback-btn {\n      padding: 8px 16px;\n      margin: 0 5px;\n      background: none;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .feedback-btn:hover {\n      background-color: #f0f0f0;\n    }\n\n    .feedback-btn.active {\n      background-color: #e0e0e0;\n      border-color: #999;\n    }\n\n    .feedback-btn span {\n      font-size: 18px;\n    }\n\n    .spinner {\n      display: inline-block;\n      width: 12px;\n      height: 12px;\n      border: 2px solid #ffffff;\n      border-radius: 50%;\n      border-top-color: transparent;\n      animation: spin 1s linear infinite;\n      margin-right: 8px;\n    }\n\n    @keyframes spin {\n      to {\n        transform: rotate(360deg);\n      }\n    }\n\n    .feedback-error {\n      color: #dc3545;\n      margin: 8px 0;\n      font-size: 14px;\n    }\n\n    .feedback-success,\n    .feedback-already-submitted {\n      text-align: center;\n      padding: 10px;\n    }\n\n    .icon-container {\n      margin: 0 auto;\n      width: 46px;\n      height: 46px;\n    }\n\n    .status-icon {\n      width: 100%;\n      height: 100%;\n    }\n\n    .feedback-title {\n      color: #4CAF50;\n      font-size: 1.2em;\n      margin: 10px 0 5px;\n    }\n\n    .feedback-message {\n      color: #666;\n      font-size: 0.9em;\n      margin: 5px 0;\n    }\n\n    .feedback-section p {\n      color: #333 !important;\n    }\n\n    .textarea-container {\n        position: relative;\n        width: 100%;\n        max-width: 280px;\n        margin: 0 auto;\n    }\n\n    .char-counter {\n        position: absolute;\n        bottom: 17px;\n        right: 15px;\n        font-size: 10px;\n        color: #666;\n        transition: color 0.3s ease;\n    }\n\n    .char-counter.near-limit {\n        color: #ffa500;\n    }\n\n    .char-counter.at-limit {\n        color: #dc3545;\n    }\n\n    .analysis-details-accordion {\n        margin: 5px 0 !important;\n        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif !important;\n    }\n\n    .accordion-button {\n        width: 100% !important;\n        padding: 8px 16px !important;\n        background: #2196f3 !important;\n        color: white !important;\n        border: none !important;\n        border-radius: 4px !important;\n        margin: 8px 0 !important;\n        cursor: pointer !important;\n        display: flex !important;\n        justify-content: center !important;\n        align-items: center !important;\n        font-size: 14px !important;\n        transition: background-color 0.2s ease !important;\n    }\n\n    .accordion-button:hover {\n        background: #1976d2 !important;\n    }\n\n    .accordion-content {\n        max-height: 300px;\n        overflow-y: auto;\n    }\n\n    .details-section p {\n        margin: 5px 0;\n        color: #212529;\n    }\n\n    .details-section strong {\n        color: #495057;\n    }\n\n    .accordion-content::-webkit-scrollbar {\n        width: 8px;\n    }\n\n    .accordion-content::-webkit-scrollbar-track {\n        background: #f1f1f1;\n        border-radius: 4px;\n    }\n\n    .accordion-content::-webkit-scrollbar-thumb {\n        background: #888;\n        border-radius: 4px;\n    }\n\n    .accordion-content::-webkit-scrollbar-thumb:hover {\n        background: #555;\n    }\n  ',document.head.appendChild(f);const v=300;window.addEventListener("error",(e=>{e.error}))})();
//# sourceMappingURL=social-content.js.map